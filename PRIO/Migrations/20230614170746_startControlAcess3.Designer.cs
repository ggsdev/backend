// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PRIO.Data;

#nullable disable

namespace PRIO.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230614170746_startControlAcess3")]
    partial class startControlAcess3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GroupPermissionsOperation", b =>
                {
                    b.Property<Guid>("GroupPermissionsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OperationsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GroupPermissionsId", "OperationsId");

                    b.HasIndex("OperationsId");

                    b.ToTable("GroupPermissionsOperation");
                });

            modelBuilder.Entity("PRIO.Models.Clusters.Cluster", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodCluster")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Clusters", (string)null);
                });

            modelBuilder.Entity("PRIO.Models.Clusters.ClusterHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClusterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodCluster")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CodClusterOld")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DescriptionOld")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsActiveOld")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("NameOld")
                        .HasMaxLength(256)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("TypeOperation")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClusterId");

                    b.HasIndex("UserId");

                    b.ToTable("ClusterHistories", (string)null);
                });

            modelBuilder.Entity("PRIO.Models.Completions.Completion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodCompletion")
                        .HasMaxLength(256)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("VARCHAR");

                    b.Property<Guid?>("ReservoirHistoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReservoirId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("WellHistoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WellId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReservoirHistoryId");

                    b.HasIndex("ReservoirId");

                    b.HasIndex("UserId");

                    b.HasIndex("WellHistoryId");

                    b.HasIndex("WellId");

                    b.ToTable("Completions", (string)null);
                });

            modelBuilder.Entity("PRIO.Models.Completions.CompletionHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodCompletion")
                        .HasMaxLength(256)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CodCompletionOld")
                        .HasMaxLength(256)
                        .HasColumnType("VARCHAR");

                    b.Property<Guid>("CompletionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DescriptionOld")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsActiveOld")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("NameOld")
                        .HasMaxLength(256)
                        .HasColumnType("VARCHAR");

                    b.Property<Guid?>("ReservoirId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReservoirOld")
                        .HasMaxLength(120)
                        .HasColumnType("UniqueIdentifier");

                    b.Property<string>("TypeOperation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WellId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("WellOld")
                        .HasMaxLength(120)
                        .HasColumnType("UniqueIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompletionId");

                    b.HasIndex("ReservoirId");

                    b.HasIndex("UserId");

                    b.HasIndex("WellId");

                    b.ToTable("CompletionHistories", (string)null);
                });

            modelBuilder.Entity("PRIO.Models.Fields.Field", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Basin")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CodField")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("InstallationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("State")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InstallationId");

                    b.HasIndex("UserId");

                    b.ToTable("Fields", (string)null);
                });

            modelBuilder.Entity("PRIO.Models.Fields.FieldHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Basin")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("BasinOld")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CodField")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CodFieldOld")
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DescriptionOld")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FieldId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InstallationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InstallationOld")
                        .HasMaxLength(120)
                        .HasColumnType("UniqueIdentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsActiveOld")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("LocationOld")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("NameOld")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("State")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("StateOld")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("TypeOperation")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("InstallationId");

                    b.HasIndex("UserId");

                    b.ToTable("FieldHistories", (string)null);
                });

            modelBuilder.Entity("PRIO.Models.FileTypes.FileType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Acronym")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FileTypes", (string)null);
                });

            modelBuilder.Entity("PRIO.Models.Groups.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Groups", (string)null);
                });

            modelBuilder.Entity("PRIO.Models.Groups.GroupPermissions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("MenuId");

                    b.ToTable("GroupMenus");
                });

            modelBuilder.Entity("PRIO.Models.Installations.Installation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClusterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodInstallationUep")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClusterId");

                    b.HasIndex("UserId");

                    b.ToTable("Installations", (string)null);
                });

            modelBuilder.Entity("PRIO.Models.Installations.InstallationHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClusterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClusterOldId")
                        .HasMaxLength(256)
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<string>("CodInstallationUep")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CodInstallationUepOld")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DescriptionOld")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("InstallationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsActiveOld")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("NameOld")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("TypeOperation")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClusterId");

                    b.HasIndex("InstallationId");

                    b.HasIndex("UserId");

                    b.ToTable("InstallationHistories", (string)null);
                });

            modelBuilder.Entity("PRIO.Models.Measurements.Bsw", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DHA_FALHA_BSW_039")
                        .HasColumnType("date");

                    b.Property<double>("DHA_PCT_BSW_039")
                        .HasPrecision(3, 2)
                        .HasColumnType("float");

                    b.Property<double>("DHA_PCT_MAXIMO_BSW_039")
                        .HasPrecision(3, 2)
                        .HasColumnType("float");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MeasurementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MeasurementId");

                    b.ToTable("BSWS_039", (string)null);
                });

            modelBuilder.Entity("PRIO.Models.Measurements.Calibration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DHA_CERTIFICADO_ANTERIOR_039")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("DHA_CERTIFICADO_ATUAL_039")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<DateTime?>("DHA_FALHA_CALIBRACAO_039")
                        .HasColumnType("date");

                    b.Property<double?>("DHA_NUM_FATOR_CALIBRACAO_ANTERIOR_039")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<double?>("DHA_NUM_FATOR_CALIBRACAO_ATUAL_039")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MeasurementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MeasurementId");

                    b.ToTable("Calibrations_039", (string)null);
                });

            modelBuilder.Entity("PRIO.Models.Measurements.Measurement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("CE_LIMITE_SPRR_ALARME_003")
                        .HasPrecision(6, 3)
                        .HasColumnType("float");

                    b.Property<string>("COD_FALHA_039")
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("COD_FALHA_SUPERIOR_039")
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("COD_INSTALACAO_001")
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("COD_INSTALACAO_002")
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("COD_INSTALACAO_003")
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("COD_TAG_EQUIPAMENTO_039")
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("COD_TAG_PONTO_MEDICAO_001")
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("COD_TAG_PONTO_MEDICAO_002")
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("COD_TAG_PONTO_MEDICAO_003")
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DHA_COD_INSTALACAO_039")
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<DateTime?>("DHA_COLETA_001")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DHA_COLETA_002")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DHA_COLETA_003")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DHA_DETECCAO_039")
                        .HasColumnType("datetime");

                    b.Property<string>("DHA_DSC_ACAO_039")
                        .HasColumnType("text");

                    b.Property<string>("DHA_DSC_FALHA_039")
                        .HasColumnType("text");

                    b.Property<string>("DHA_DSC_METODOLOGIA_039")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DHA_FIM_PERIODO_MEDICAO_001")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DHA_FIM_PERIODO_MEDICAO_002")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DHA_FIM_PERIODO_MEDICAO_003")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DHA_INICIO_PERIODO_MEDICAO_001")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DHA_INICIO_PERIODO_MEDICAO_002")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DHA_INICIO_PERIODO_MEDICAO_003")
                        .HasColumnType("datetime");

                    b.Property<string>("DHA_NOM_RESPONSAVEL_RELATO_039")
                        .HasMaxLength(155)
                        .HasColumnType("varchar");

                    b.Property<string>("DHA_NUM_PREVISAO_RETORNO_DIAS_039")
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<string>("DHA_NUM_SERIE_EQUIPAMENTO_039")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<DateTime?>("DHA_OCORRENCIA_039")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DHA_RETORNO_039")
                        .HasColumnType("datetime");

                    b.Property<string>("DSC_ESTADO_INSNO_CASO_FALHA_001")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("DSC_ESTADO_INSNO_CASO_FALHA_002")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("DSC_ESTADO_INSNO_CASO_FALHA_1_003")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("DSC_ESTADO_INSNO_CASO_FALHA_2_003")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("DSC_ESTADO_INSNO_CASO_FALHA_3_003")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("DSC_ESTADO_INSTRUMENTO_FALHA_002")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("DSC_ESTADO_INSTRUMENTO_FALHA_003")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("DSC_ESTADO_INSTRUMENTO_FALHA_1_001")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("DSC_ESTADO_INSTRUMENTO_FALHA_2_001")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("DSC_ESTADO_INSTRUMENTO_FALHA_3_001")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("DSC_LCLZO_TMDA_PRSO_DFRNL_003")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("DSC_MATERIAL_CNSTO_TRCHO_MDCO_003")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("DSC_MATERIAL_CONTRUCAO_PLACA_003")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("DSC_NORMA_UTILIZADA_CALCULO_002")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("DSC_NORMA_UTILIZADA_CALCULO_003")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<short?>("DSC_TIPO_FALHA_039")
                        .HasColumnType("smallint");

                    b.Property<string>("DSC_VERSAO_SOFTWARE_001")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("DSC_VERSAO_SOFTWARE_002")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("DSC_VERSAO_SOFTWARE_003")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FileTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ICE_CORRECAO_BSW_001")
                        .HasPrecision(8, 8)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_CORRECAO_PRESSAO_LIQUIDO_001")
                        .HasPrecision(8, 8)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_CRRCO_TEMPERATURA_LIQUIDO_001")
                        .HasPrecision(8, 8)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_CUTOFF_001")
                        .HasPrecision(6, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_CUTOFF_002")
                        .HasPrecision(6, 3)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_DENSIDADADE_RELATIVA_001")
                        .HasPrecision(8, 8)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_DENSIDADE_RELATIVA_002")
                        .HasPrecision(8, 8)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_DENSIDADE_RELATIVA_003")
                        .HasPrecision(8, 8)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_K_FACTOR_10_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_K_FACTOR_10_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_K_FACTOR_11_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_K_FACTOR_11_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_K_FACTOR_12_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_K_FACTOR_12_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_K_FACTOR_13_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_K_FACTOR_13_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_K_FACTOR_14_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_K_FACTOR_14_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_K_FACTOR_15_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_K_FACTOR_15_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_K_FACTOR_1_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_K_FACTOR_1_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_K_FACTOR_2_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_K_FACTOR_2_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_K_FACTOR_3_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_K_FACTOR_3_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_K_FACTOR_4_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_K_FACTOR_4_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_K_FACTOR_5_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_K_FACTOR_5_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_K_FACTOR_6_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_K_FACTOR_6_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_K_FACTOR_7_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_K_FACTOR_7_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_K_FACTOR_8_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_K_FACTOR_8_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_K_FACTOR_9_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_K_FACTOR_9_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_LIMITE_INFRR_ALARME_001")
                        .HasPrecision(6, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_LIMITE_INFRR_ALARME_002")
                        .HasPrecision(6, 3)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_LIMITE_INFRR_ALARME_1_003")
                        .HasPrecision(6, 3)
                        .HasColumnType("float");

                    b.Property<bool?>("ICE_LIMITE_INFRR_ALARME_2_003")
                        .HasColumnType("bit");

                    b.Property<double?>("ICE_LIMITE_SPRR_ALARME_001")
                        .HasPrecision(6, 2)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_LIMITE_SPRR_ALARME_002")
                        .HasPrecision(6, 3)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_METER_FACTOR_10_001")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_METER_FACTOR_10_002")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_METER_FACTOR_11_001")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_METER_FACTOR_11_002")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_METER_FACTOR_12_001")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_METER_FACTOR_12_002")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_METER_FACTOR_13_001")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_METER_FACTOR_13_002")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_METER_FACTOR_14_001")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_METER_FACTOR_14_002")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_METER_FACTOR_15_001")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_METER_FACTOR_15_002")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_METER_FACTOR_1_001")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_METER_FACTOR_1_002")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_METER_FACTOR_2_001")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_METER_FACTOR_2_002")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_METER_FACTOR_3_001")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_METER_FACTOR_3_002")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_METER_FACTOR_4_001")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_METER_FACTOR_4_002")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_METER_FACTOR_5_001")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_METER_FACTOR_5_002")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_METER_FACTOR_6_001")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_METER_FACTOR_6_002")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_METER_FACTOR_7_001")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_METER_FACTOR_7_002")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_METER_FACTOR_8_001")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_METER_FACTOR_8_002")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_METER_FACTOR_9_001")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<double?>("ICE_METER_FACTOR_9_002")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<string>("IND_HABILITACAO_ALARME_1_001")
                        .HasMaxLength(1)
                        .HasColumnType("varchar");

                    b.Property<string>("IND_HABILITACAO_ALARME_1_002")
                        .HasMaxLength(1)
                        .HasColumnType("varchar");

                    b.Property<string>("IND_HABILITACAO_ALARME_1_003")
                        .HasMaxLength(1)
                        .HasColumnType("varchar");

                    b.Property<string>("IND_HABILITACAO_ALARME_2_001")
                        .HasMaxLength(1)
                        .HasColumnType("varchar");

                    b.Property<string>("IND_HABILITACAO_ALARME_2_002")
                        .HasMaxLength(1)
                        .HasColumnType("varchar");

                    b.Property<string>("IND_HABILITACAO_ALARME_2_003")
                        .HasMaxLength(1)
                        .HasColumnType("varchar");

                    b.Property<string>("IND_HABILITACAO_ALARME_3_001")
                        .HasMaxLength(1)
                        .HasColumnType("varchar");

                    b.Property<string>("IND_HABILITACAO_ALARME_3_002")
                        .HasMaxLength(1)
                        .HasColumnType("varchar");

                    b.Property<string>("IND_HABILITACAO_ALARME_3_003")
                        .HasMaxLength(1)
                        .HasColumnType("varchar");

                    b.Property<string>("IND_HABILITACAO_ALARME_4_001")
                        .HasMaxLength(1)
                        .HasColumnType("varchar");

                    b.Property<string>("IND_HABILITACAO_ALARME_4_003")
                        .HasMaxLength(1)
                        .HasColumnType("varchar");

                    b.Property<string>("IND_HABILITACAO_ALARME_5_001")
                        .HasMaxLength(1)
                        .HasColumnType("varchar");

                    b.Property<string>("IND_HABILITACAO_ALARME_5_003")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IND_TIPO_NOTIFICACAO_039")
                        .HasMaxLength(1)
                        .HasColumnType("char");

                    b.Property<string>("IND_TIPO_PRESSAO_CONSIDERADA_001")
                        .HasMaxLength(1)
                        .HasColumnType("char");

                    b.Property<string>("IND_TIPO_PRESSAO_CONSIDERADA_002")
                        .HasMaxLength(1)
                        .HasColumnType("char");

                    b.Property<string>("IND_TIPO_PRESSAO_CONSIDERADA_003")
                        .HasMaxLength(1)
                        .HasColumnType("char");

                    b.Property<string>("IND_TOMADA_PRESSAO_ESTATICA_003")
                        .HasMaxLength(1)
                        .HasColumnType("char");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<double?>("MED_BRUTO_MOVIMENTADO_002")
                        .HasPrecision(6, 5)
                        .HasColumnType("float");

                    b.Property<double?>("MED_CORRIGIDO_MVMDO_002")
                        .HasPrecision(6, 5)
                        .HasColumnType("float");

                    b.Property<double?>("MED_CORRIGIDO_MVMDO_003")
                        .HasPrecision(6, 5)
                        .HasColumnType("float");

                    b.Property<double?>("MED_CUTOFF_KPA_1_003")
                        .HasPrecision(6, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_CUTOFF_KPA_2_003")
                        .HasPrecision(6, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_DENSIDADE_RELATIVA_001")
                        .HasPrecision(8, 8)
                        .HasColumnType("float");

                    b.Property<double?>("MED_DENSIDADE_RELATIVA_002")
                        .HasPrecision(8, 8)
                        .HasColumnType("float");

                    b.Property<double?>("MED_DENSIDADE_RELATIVA_003")
                        .HasPrecision(8, 8)
                        .HasColumnType("float");

                    b.Property<double?>("MED_DIAMETRO_REFERENCIA_003")
                        .HasPrecision(4, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_DIFERENCIAL_PRESSAO_003")
                        .HasPrecision(6, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_DMTRO_INTRO_TRCHO_MDCO_003")
                        .HasPrecision(4, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_PRESSAO_ATMSA_001")
                        .HasPrecision(3, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_PRESSAO_ATMSA_002")
                        .HasPrecision(3, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_PRESSAO_ATMSA_003")
                        .HasPrecision(3, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_PRESSAO_ESTATICA_001")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("MED_PRESSAO_ESTATICA_002")
                        .HasPrecision(6, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_PRESSAO_ESTATICA_003")
                        .HasPrecision(6, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_PRESSAO_RFRNA_001")
                        .HasPrecision(3, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_PRESSAO_RFRNA_002")
                        .HasPrecision(3, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_PRESSAO_RFRNA_003")
                        .HasPrecision(3, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_PRSO_ADOTADA_FALHA_001")
                        .HasPrecision(6, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_PRSO_ADOTADA_FALHA_002")
                        .HasPrecision(6, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_PRSO_ADOTADA_FALHA_1_003")
                        .HasPrecision(6, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_PRSO_ADOTADA_FALHA_2_003")
                        .HasPrecision(6, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_PRSO_ADOTADA_FALHA_3_003")
                        .HasMaxLength(50)
                        .HasPrecision(6, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_PRSO_LIMITE_SPRR_ALRME_001")
                        .HasPrecision(6, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_PRSO_LIMITE_SPRR_ALRME_002")
                        .HasPrecision(6, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_PRSO_LIMITE_SPRR_ALRME_1_003")
                        .HasPrecision(6, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_PRSO_LIMITE_SPRR_ALRME_2_003")
                        .HasPrecision(6, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_PRSO_LIMITE_SPRR_ALRME_3_003")
                        .HasPrecision(6, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_PRSO_LIMITE_SPRR_ALRME_4_003")
                        .HasPrecision(6, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_PRSO_LIMITE_SPRR_ALRME_5_003")
                        .HasPrecision(6, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_PRSO_LMTE_INFRR_ALRME_001")
                        .HasPrecision(6, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_PRSO_LMTE_INFRR_ALRME_002")
                        .HasPrecision(6, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_PRSO_LMTE_INFRR_ALRME_1_003")
                        .HasPrecision(6, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_PRSO_LMTE_INFRR_ALRME_2_003")
                        .HasPrecision(6, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_PRSO_LMTE_INFRR_ALRME_3_003")
                        .HasPrecision(6, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_PRSO_LMTE_INFRR_ALRME_4_003")
                        .HasPrecision(6, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_PRSO_LMTE_INFRR_ALRME_5_003")
                        .HasPrecision(6, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_TEMPERATURA_001")
                        .HasPrecision(3, 2)
                        .HasColumnType("float");

                    b.Property<double?>("MED_TEMPERATURA_1_002")
                        .HasPrecision(3, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_TEMPERATURA_1_003")
                        .HasPrecision(3, 2)
                        .HasColumnType("float");

                    b.Property<double?>("MED_TEMPERATURA_2_002")
                        .HasPrecision(3, 2)
                        .HasColumnType("float");

                    b.Property<double?>("MED_TEMPERATURA_2_003")
                        .HasPrecision(3, 2)
                        .HasColumnType("float");

                    b.Property<double?>("MED_TEMPERATURA_RFRNA_003")
                        .HasPrecision(3, 2)
                        .HasColumnType("float");

                    b.Property<double?>("MED_TMPTA_ADTTA_FALHA_001")
                        .HasPrecision(3, 2)
                        .HasColumnType("float");

                    b.Property<double?>("MED_TMPTA_ADTTA_FALHA_002")
                        .HasPrecision(3, 2)
                        .HasColumnType("float");

                    b.Property<double?>("MED_TMPTA_ADTTA_FALHA_003")
                        .HasPrecision(3, 2)
                        .HasColumnType("float");

                    b.Property<double?>("MED_TMPTA_FLUIDO_001")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<double?>("MED_TMPTA_INFRR_ALRME_001")
                        .HasPrecision(3, 2)
                        .HasColumnType("float");

                    b.Property<double?>("MED_TMPTA_INFRR_ALRME_002")
                        .HasPrecision(6, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_TMPTA_INFRR_ALRME_003")
                        .HasPrecision(3, 2)
                        .HasColumnType("float");

                    b.Property<double?>("MED_TMPTA_SPRR_ALARME_001")
                        .HasPrecision(3, 2)
                        .HasColumnType("float");

                    b.Property<double?>("MED_TMPTA_SPRR_ALARME_002")
                        .HasPrecision(6, 3)
                        .HasColumnType("float");

                    b.Property<double?>("MED_TMPTA_SPRR_ALARME_003")
                        .HasPrecision(3, 2)
                        .HasColumnType("float");

                    b.Property<double?>("MED_TMPTA_TRCHO_MDCO_003")
                        .HasPrecision(3, 2)
                        .HasColumnType("float");

                    b.Property<double?>("MED_VOLUME_BRTO_CRRGO_MVMDO_001")
                        .HasPrecision(6, 5)
                        .HasColumnType("float");

                    b.Property<double?>("MED_VOLUME_BRUTO_MVMDO_001")
                        .HasPrecision(6, 5)
                        .HasColumnType("float");

                    b.Property<double?>("MED_VOLUME_LIQUIDO_MVMDO_001")
                        .HasPrecision(6, 5)
                        .HasColumnType("float");

                    b.Property<double?>("MED_VOLUME_TTLZO_FIM_PRDO_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("float");

                    b.Property<double?>("MED_VOLUME_TTLZO_INCO_PRDO_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("float");

                    b.Property<Guid?>("MeasuringEquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NUM_SERIE_1_001")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_1_002")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_1_003")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_2_001")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_2_002")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_2_003")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_3_001")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_3_003")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_4_001")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_4_003")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_5_003")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_6_003")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_COMPUTADOR_VAZAO_001")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_COMPUTADOR_VAZAO_002")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_COMPUTADOR_VAZAO_003")
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_ELEMENTO_PRIMARIO_001")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_ELEMENTO_PRIMARIO_002")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_ELEMENTO_PRIMARIO_003")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<double?>("PCT_ADOTADO_CASO_FALHA_1_001")
                        .HasPrecision(3, 3)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_ADOTADO_CASO_FALHA_2_001")
                        .HasPrecision(3, 3)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_AGUA_002")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_AGUA_003")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_ARGONIO_002")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_ARGONIO_003")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_CO2_002")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_CO2_003")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_CO_002")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_CO_003")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_DECANO_002")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_DECANO_003")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_ETANO_002")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_ETANO_003")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_H2S_002")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_H2S_003")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_HELIO_002")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_HELIO_003")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_HEPTANO_002")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_HEPTANO_003")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_HEXANO_002")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_HEXANO_003")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_HIDROGENIO_002")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_HIDROGENIO_003")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_I_BUTANO_002")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_I_BUTANO_003")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_I_PENTANO_002")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_I_PENTANO_003")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_METANO_002")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_METANO_003")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_NITROGENIO_002")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_NITROGENIO_003")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_NONANO_002")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_NONANO_003")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_N_BUTANO_002")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_N_BUTANO_003")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_N_PENTANO_002")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_N_PENTANO_003")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_OCTANO_002")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_OCTANO_003")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_OXIGENIO_002")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_OXIGENIO_003")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_PROPANO_002")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_CROMATOGRAFIA_PROPANO_003")
                        .HasPrecision(6, 6)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_LIMITE_INFERIOR_1_001")
                        .HasPrecision(3, 3)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_LIMITE_INFERIOR_2_001")
                        .HasPrecision(3, 3)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_LIMITE_SUPERIOR_1_001")
                        .HasPrecision(3, 3)
                        .HasColumnType("float");

                    b.Property<double?>("PCT_LIMITE_SUPERIOR_2_001")
                        .HasPrecision(3, 3)
                        .HasColumnType("float");

                    b.Property<double?>("PRZ_DURACAO_FLUXO_EFETIVO_002")
                        .HasPrecision(4, 4)
                        .HasColumnType("float");

                    b.Property<double?>("PRZ_DURACAO_FLUXO_EFETIVO_003")
                        .HasPrecision(4, 4)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_K_FACTOR_10_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_K_FACTOR_10_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_K_FACTOR_11_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_K_FACTOR_11_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_K_FACTOR_12_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_K_FACTOR_12_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_K_FACTOR_13_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_K_FACTOR_13_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_K_FACTOR_14_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_K_FACTOR_14_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_K_FACTOR_15_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_K_FACTOR_15_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_K_FACTOR_1_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_K_FACTOR_1_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_K_FACTOR_2_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_K_FACTOR_2_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_K_FACTOR_3_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_K_FACTOR_3_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_K_FACTOR_4_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_K_FACTOR_4_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_K_FACTOR_5_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_K_FACTOR_5_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_K_FACTOR_6_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_K_FACTOR_6_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_K_FACTOR_7_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_K_FACTOR_7_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_K_FACTOR_8_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_K_FACTOR_8_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_K_FACTOR_9_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_K_FACTOR_9_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_METER_FACTOR_10_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_METER_FACTOR_10_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_METER_FACTOR_11_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_METER_FACTOR_11_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_METER_FACTOR_12_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_METER_FACTOR_12_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_METER_FACTOR_13_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_METER_FACTOR_13_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_METER_FACTOR_14_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_METER_FACTOR_14_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_METER_FACTOR_15_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_METER_FACTOR_15_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_METER_FACTOR_1_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_METER_FACTOR_1_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_METER_FACTOR_2_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_METER_FACTOR_2_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_METER_FACTOR_3_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_METER_FACTOR_3_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_METER_FACTOR_4_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_METER_FACTOR_4_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_METER_FACTOR_5_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_METER_FACTOR_5_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_METER_FACTOR_6_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_METER_FACTOR_6_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_METER_FACTOR_7_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_METER_FACTOR_7_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_METER_FACTOR_8_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_METER_FACTOR_8_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_METER_FACTOR_9_001")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<double?>("QTD_PULSOS_METER_FACTOR_9_002")
                        .HasPrecision(8, 2)
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FileTypeId");

                    b.HasIndex("MeasuringEquipmentId");

                    b.HasIndex("UserId");

                    b.ToTable("Measurements", (string)null);
                });

            modelBuilder.Entity("PRIO.Models.Measurements.Volume", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DHA_MEDICAO_039")
                        .HasColumnType("date");

                    b.Property<double?>("DHA_MED_DECLARADO_039")
                        .HasPrecision(8, 6)
                        .HasColumnType("float");

                    b.Property<double?>("DHA_MED_REGISTRADO_039")
                        .HasPrecision(8, 6)
                        .HasColumnType("float");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MeasurementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MeasurementId");

                    b.ToTable("Volumes_039", (string)null);
                });

            modelBuilder.Entity("PRIO.Models.MeasuringEquipments.MeasuringEquipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChannelNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<string>("CommunicationProtocol")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Fluid")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar");

                    b.Property<bool?>("HasSeal")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<bool?>("InOperation")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<Guid>("InstallationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("MVS")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar");

                    b.Property<string>("SerieNumber")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar");

                    b.Property<string>("TagEquipment")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar");

                    b.Property<string>("TagMeasuringPoint")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<string>("TypeEquipment")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar");

                    b.Property<string>("TypePoint")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InstallationId");

                    b.HasIndex("UserId");

                    b.ToTable("MeasuringEquipments", (string)null);
                });

            modelBuilder.Entity("PRIO.Models.Menus.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Order")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Route")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Menus", (string)null);
                });

            modelBuilder.Entity("PRIO.Models.Operations.Operation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("PRIO.Models.Permissions.UserPermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupMenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GroupName")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MenuIcon")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<Guid?>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MenuName")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MenuOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuRoute")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GroupMenuId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPermissions", (string)null);
                });

            modelBuilder.Entity("PRIO.Models.Reservoirs.Reservoir", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodReservoir")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ZoneId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("ZoneId");

                    b.ToTable("Reservoirs", (string)null);
                });

            modelBuilder.Entity("PRIO.Models.Reservoirs.ReservoirHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodReservoir")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CodReservoirOld")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DescriptionOld")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsActiveOld")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("NameOld")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<Guid>("ReservoirId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TypeOperation")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ZoneId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ZoneOldId")
                        .HasMaxLength(120)
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.HasKey("Id");

                    b.HasIndex("ReservoirId");

                    b.HasIndex("UserId");

                    b.HasIndex("ZoneId");

                    b.ToTable("ReservoirHistories", (string)null);
                });

            modelBuilder.Entity("PRIO.Models.Users.Session", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpiresIn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("UserHttpAgent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Sessions", (string)null);
                });

            modelBuilder.Entity("PRIO.Models.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("GroupId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("PRIO.Models.Users.UserHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DescriptionOld")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("EmailOld")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsActiveOld")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("NameOld")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("PasswordOld")
                        .HasMaxLength(90)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("TypeOld")
                        .HasMaxLength(90)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("TypeOperation")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserOperationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("UsernameOld")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserHistories", (string)null);
                });

            modelBuilder.Entity("PRIO.Models.Wells.Well", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ArtificialLift")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<decimal?>("BaseOfPerforated")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<string>("CategoryAnp")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CategoryOperator")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CategoryReclassificationAnp")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CodWell")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CodWellAnp")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CoordX")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CoordY")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DATETIME");

                    b.Property<string>("DatumHorizontal")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FieldId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Latitude4C")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("LatitudeDD")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Longitude4C")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("LongitudeDD")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<bool?>("StatusOperator")
                        .HasColumnType("bit");

                    b.Property<decimal?>("TopOfPerforated")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("TypeBaseCoordinate")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("DATETIME");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("WaterDepth")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<string>("WellOperatorName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("UserId");

                    b.ToTable("Wells", (string)null);
                });

            modelBuilder.Entity("PRIO.Models.Wells.WellHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ArtificialLift")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("ArtificialLiftOld")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<decimal?>("BaseOfPerforated")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("BaseOfPerforatedOld")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<string>("CategoryAnp")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CategoryAnpOld")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CategoryOperator")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CategoryOperatorOld")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CategoryReclassificationAnp")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CategoryReclassificationAnpOld")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CodWell")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CodWellAnp")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CodWellAnpOld")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CodWellOld")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CoordX")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CoordXOld")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CoordY")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CoordYOld")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DATETIME");

                    b.Property<string>("DatumHorizontal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatumHorizontalOld")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DescriptionOld")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FieldId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FieldOld")
                        .HasMaxLength(120)
                        .HasColumnType("UniqueIdentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsActiveOld")
                        .HasColumnType("bit");

                    b.Property<string>("Latitude4C")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Latitude4COld")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("LatitudeDD")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("LatitudeDDOld")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Longitude4C")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Longitude4COld")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("LongitudeDD")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("LongitudeDDOld")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("NameOld")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<bool?>("StatusOperator")
                        .HasColumnType("bit");

                    b.Property<bool?>("StatusOperatorOld")
                        .HasColumnType("bit");

                    b.Property<decimal?>("TopOfPerforated")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("TopOfPerforatedOld")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("TypeBaseCoordinate")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("TypeBaseCoordinateOld")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("TypeOld")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("TypeOperation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("WaterDepth")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("WaterDepthOld")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<Guid>("WellId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WellOperatorName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("WellOperatorNameOld")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("UserId");

                    b.HasIndex("WellId");

                    b.ToTable("WellHistories", (string)null);
                });

            modelBuilder.Entity("PRIO.Models.Zones.Zone", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodZone")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FieldId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("UserId");

                    b.ToTable("Zones", (string)null);
                });

            modelBuilder.Entity("PRIO.Models.Zones.ZoneHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodZone")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CodZoneOld")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DescriptionOld")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FieldId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FieldOldId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsActiveOld")
                        .HasColumnType("bit");

                    b.Property<string>("TypeOperation")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ZoneId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("UserId");

                    b.HasIndex("ZoneId");

                    b.ToTable("ZoneHistories", (string)null);
                });

            modelBuilder.Entity("GroupPermissionsOperation", b =>
                {
                    b.HasOne("PRIO.Models.Groups.GroupPermissions", null)
                        .WithMany()
                        .HasForeignKey("GroupPermissionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRIO.Models.Operations.Operation", null)
                        .WithMany()
                        .HasForeignKey("OperationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PRIO.Models.Clusters.Cluster", b =>
                {
                    b.HasOne("PRIO.Models.Users.User", "User")
                        .WithMany("Clusters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRIO.Models.Clusters.ClusterHistory", b =>
                {
                    b.HasOne("PRIO.Models.Clusters.Cluster", "Cluster")
                        .WithMany("ClusterHistories")
                        .HasForeignKey("ClusterId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.Models.Users.User", "User")
                        .WithMany("ClusterHistories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cluster");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRIO.Models.Completions.Completion", b =>
                {
                    b.HasOne("PRIO.Models.Reservoirs.ReservoirHistory", null)
                        .WithMany("Completions")
                        .HasForeignKey("ReservoirHistoryId");

                    b.HasOne("PRIO.Models.Reservoirs.Reservoir", "Reservoir")
                        .WithMany("Completions")
                        .HasForeignKey("ReservoirId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("PRIO.Models.Users.User", "User")
                        .WithMany("Completions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.Models.Wells.WellHistory", null)
                        .WithMany("Completions")
                        .HasForeignKey("WellHistoryId");

                    b.HasOne("PRIO.Models.Wells.Well", "Well")
                        .WithMany("Completions")
                        .HasForeignKey("WellId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Reservoir");

                    b.Navigation("User");

                    b.Navigation("Well");
                });

            modelBuilder.Entity("PRIO.Models.Completions.CompletionHistory", b =>
                {
                    b.HasOne("PRIO.Models.Completions.Completion", "Completion")
                        .WithMany("CompletionHistories")
                        .HasForeignKey("CompletionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.Models.Reservoirs.Reservoir", "Reservoir")
                        .WithMany("CompletionHistories")
                        .HasForeignKey("ReservoirId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("PRIO.Models.Users.User", "User")
                        .WithMany("CompletionHistories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.Models.Wells.Well", "Well")
                        .WithMany("CompletionHistories")
                        .HasForeignKey("WellId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Completion");

                    b.Navigation("Reservoir");

                    b.Navigation("User");

                    b.Navigation("Well");
                });

            modelBuilder.Entity("PRIO.Models.Fields.Field", b =>
                {
                    b.HasOne("PRIO.Models.Installations.Installation", "Installation")
                        .WithMany("Fields")
                        .HasForeignKey("InstallationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.Models.Users.User", "User")
                        .WithMany("Fields")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Installation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRIO.Models.Fields.FieldHistory", b =>
                {
                    b.HasOne("PRIO.Models.Fields.Field", "Field")
                        .WithMany("FieldHistories")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.Models.Installations.Installation", "Installation")
                        .WithMany("FieldHistories")
                        .HasForeignKey("InstallationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.Models.Users.User", "User")
                        .WithMany("FieldHistories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Field");

                    b.Navigation("Installation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRIO.Models.Groups.GroupPermissions", b =>
                {
                    b.HasOne("PRIO.Models.Groups.Group", "Group")
                        .WithMany("GroupPermissions")
                        .HasForeignKey("GroupId");

                    b.HasOne("PRIO.Models.Menus.Menu", "Menu")
                        .WithMany("GroupPermissions")
                        .HasForeignKey("MenuId");

                    b.Navigation("Group");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("PRIO.Models.Installations.Installation", b =>
                {
                    b.HasOne("PRIO.Models.Clusters.Cluster", "Cluster")
                        .WithMany("Installations")
                        .HasForeignKey("ClusterId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.Models.Users.User", "User")
                        .WithMany("Installations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cluster");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRIO.Models.Installations.InstallationHistory", b =>
                {
                    b.HasOne("PRIO.Models.Clusters.Cluster", "Cluster")
                        .WithMany("InstallationHistories")
                        .HasForeignKey("ClusterId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.Models.Installations.Installation", "Installation")
                        .WithMany("InstallationHistories")
                        .HasForeignKey("InstallationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.Models.Users.User", "User")
                        .WithMany("InstallationHistories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cluster");

                    b.Navigation("Installation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRIO.Models.Measurements.Bsw", b =>
                {
                    b.HasOne("PRIO.Models.Measurements.Measurement", "Measurement")
                        .WithMany("LISTA_BSW")
                        .HasForeignKey("MeasurementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Measurement");
                });

            modelBuilder.Entity("PRIO.Models.Measurements.Calibration", b =>
                {
                    b.HasOne("PRIO.Models.Measurements.Measurement", "Measurement")
                        .WithMany("LISTA_CALIBRACAO")
                        .HasForeignKey("MeasurementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Measurement");
                });

            modelBuilder.Entity("PRIO.Models.Measurements.Measurement", b =>
                {
                    b.HasOne("PRIO.Models.FileTypes.FileType", "FileType")
                        .WithMany("Measurements")
                        .HasForeignKey("FileTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRIO.Models.MeasuringEquipments.MeasuringEquipment", "MeasuringEquipment")
                        .WithMany("Measurements")
                        .HasForeignKey("MeasuringEquipmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PRIO.Models.Users.User", "User")
                        .WithMany("Measurements")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FileType");

                    b.Navigation("MeasuringEquipment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRIO.Models.Measurements.Volume", b =>
                {
                    b.HasOne("PRIO.Models.Measurements.Measurement", "Measurement")
                        .WithMany("LISTA_VOLUME")
                        .HasForeignKey("MeasurementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Measurement");
                });

            modelBuilder.Entity("PRIO.Models.MeasuringEquipments.MeasuringEquipment", b =>
                {
                    b.HasOne("PRIO.Models.Installations.Installation", "Installation")
                        .WithMany("MeasuringEquipments")
                        .HasForeignKey("InstallationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRIO.Models.Users.User", "User")
                        .WithMany("MeasuringEquipments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Installation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRIO.Models.Menus.Menu", b =>
                {
                    b.HasOne("PRIO.Models.Menus.Menu", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("PRIO.Models.Permissions.UserPermission", b =>
                {
                    b.HasOne("PRIO.Models.Groups.GroupPermissions", "GroupMenu")
                        .WithMany("Permissions")
                        .HasForeignKey("GroupMenuId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.Models.Users.User", "User")
                        .WithMany("UserPermissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("GroupMenu");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRIO.Models.Reservoirs.Reservoir", b =>
                {
                    b.HasOne("PRIO.Models.Users.User", "User")
                        .WithMany("Reservoirs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.Models.Zones.Zone", "Zone")
                        .WithMany("Reservoirs")
                        .HasForeignKey("ZoneId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("PRIO.Models.Reservoirs.ReservoirHistory", b =>
                {
                    b.HasOne("PRIO.Models.Reservoirs.Reservoir", "Reservoir")
                        .WithMany("ReservoirHistories")
                        .HasForeignKey("ReservoirId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.Models.Users.User", "User")
                        .WithMany("ReservoirHistories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.Models.Zones.Zone", "Zone")
                        .WithMany("ReservoirHistories")
                        .HasForeignKey("ZoneId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Reservoir");

                    b.Navigation("User");

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("PRIO.Models.Users.Session", b =>
                {
                    b.HasOne("PRIO.Models.Users.User", "User")
                        .WithOne("Session")
                        .HasForeignKey("PRIO.Models.Users.Session", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRIO.Models.Users.User", b =>
                {
                    b.HasOne("PRIO.Models.Groups.Group", null)
                        .WithMany("Users")
                        .HasForeignKey("GroupId");
                });

            modelBuilder.Entity("PRIO.Models.Users.UserHistory", b =>
                {
                    b.HasOne("PRIO.Models.Users.User", "User")
                        .WithMany("UserHistories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRIO.Models.Wells.Well", b =>
                {
                    b.HasOne("PRIO.Models.Fields.Field", "Field")
                        .WithMany("Wells")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.Models.Users.User", "User")
                        .WithMany("Wells")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Field");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRIO.Models.Wells.WellHistory", b =>
                {
                    b.HasOne("PRIO.Models.Fields.Field", "Field")
                        .WithMany("WellHistories")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.Models.Users.User", "User")
                        .WithMany("WellHistories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.Models.Wells.Well", "Well")
                        .WithMany("WellHistories")
                        .HasForeignKey("WellId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Field");

                    b.Navigation("User");

                    b.Navigation("Well");
                });

            modelBuilder.Entity("PRIO.Models.Zones.Zone", b =>
                {
                    b.HasOne("PRIO.Models.Fields.Field", "Field")
                        .WithMany("Zones")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.Models.Users.User", "User")
                        .WithMany("Zones")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Field");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRIO.Models.Zones.ZoneHistory", b =>
                {
                    b.HasOne("PRIO.Models.Fields.Field", "Field")
                        .WithMany("ZoneHistories")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.Models.Users.User", "User")
                        .WithMany("ZoneHistories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.Models.Zones.Zone", "Zone")
                        .WithMany("ZoneHistories")
                        .HasForeignKey("ZoneId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Field");

                    b.Navigation("User");

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("PRIO.Models.Clusters.Cluster", b =>
                {
                    b.Navigation("ClusterHistories");

                    b.Navigation("InstallationHistories");

                    b.Navigation("Installations");
                });

            modelBuilder.Entity("PRIO.Models.Completions.Completion", b =>
                {
                    b.Navigation("CompletionHistories");
                });

            modelBuilder.Entity("PRIO.Models.Fields.Field", b =>
                {
                    b.Navigation("FieldHistories");

                    b.Navigation("WellHistories");

                    b.Navigation("Wells");

                    b.Navigation("ZoneHistories");

                    b.Navigation("Zones");
                });

            modelBuilder.Entity("PRIO.Models.FileTypes.FileType", b =>
                {
                    b.Navigation("Measurements");
                });

            modelBuilder.Entity("PRIO.Models.Groups.Group", b =>
                {
                    b.Navigation("GroupPermissions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("PRIO.Models.Groups.GroupPermissions", b =>
                {
                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("PRIO.Models.Installations.Installation", b =>
                {
                    b.Navigation("FieldHistories");

                    b.Navigation("Fields");

                    b.Navigation("InstallationHistories");

                    b.Navigation("MeasuringEquipments");
                });

            modelBuilder.Entity("PRIO.Models.Measurements.Measurement", b =>
                {
                    b.Navigation("LISTA_BSW");

                    b.Navigation("LISTA_CALIBRACAO");

                    b.Navigation("LISTA_VOLUME");
                });

            modelBuilder.Entity("PRIO.Models.MeasuringEquipments.MeasuringEquipment", b =>
                {
                    b.Navigation("Measurements");
                });

            modelBuilder.Entity("PRIO.Models.Menus.Menu", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("GroupPermissions");
                });

            modelBuilder.Entity("PRIO.Models.Reservoirs.Reservoir", b =>
                {
                    b.Navigation("CompletionHistories");

                    b.Navigation("Completions");

                    b.Navigation("ReservoirHistories");
                });

            modelBuilder.Entity("PRIO.Models.Reservoirs.ReservoirHistory", b =>
                {
                    b.Navigation("Completions");
                });

            modelBuilder.Entity("PRIO.Models.Users.User", b =>
                {
                    b.Navigation("ClusterHistories");

                    b.Navigation("Clusters");

                    b.Navigation("CompletionHistories");

                    b.Navigation("Completions");

                    b.Navigation("FieldHistories");

                    b.Navigation("Fields");

                    b.Navigation("InstallationHistories");

                    b.Navigation("Installations");

                    b.Navigation("Measurements");

                    b.Navigation("MeasuringEquipments");

                    b.Navigation("ReservoirHistories");

                    b.Navigation("Reservoirs");

                    b.Navigation("Session");

                    b.Navigation("UserHistories");

                    b.Navigation("UserPermissions");

                    b.Navigation("WellHistories");

                    b.Navigation("Wells");

                    b.Navigation("ZoneHistories");

                    b.Navigation("Zones");
                });

            modelBuilder.Entity("PRIO.Models.Wells.Well", b =>
                {
                    b.Navigation("CompletionHistories");

                    b.Navigation("Completions");

                    b.Navigation("WellHistories");
                });

            modelBuilder.Entity("PRIO.Models.Wells.WellHistory", b =>
                {
                    b.Navigation("Completions");
                });

            modelBuilder.Entity("PRIO.Models.Zones.Zone", b =>
                {
                    b.Navigation("ReservoirHistories");

                    b.Navigation("Reservoirs");

                    b.Navigation("ZoneHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
