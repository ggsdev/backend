// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PRIO.src.Shared.Infra.EF;

#nullable disable

namespace PRIO.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230814183656_populateAuxiliaries")]
    partial class populateAuxiliaries
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PRIO.src.Modules.ControlAccess.Groups.Infra.EF.Models.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Groups", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.ControlAccess.Groups.Infra.EF.Models.GroupOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GlobalOperationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GroupPermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OperationName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GlobalOperationId");

                    b.HasIndex("GroupPermissionId");

                    b.ToTable("GroupOperations");
                });

            modelBuilder.Entity("PRIO.src.Modules.ControlAccess.Groups.Infra.EF.Models.GroupPermission", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MenuIcon")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<Guid?>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MenuOrder")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MenuRoute")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("hasChildren")
                        .HasColumnType("bit");

                    b.Property<bool?>("hasParent")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("MenuId");

                    b.ToTable("GroupPermissions", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.ControlAccess.Menus.Infra.EF.Models.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Order")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Route")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Menus", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.ControlAccess.Operations.Infra.EF.Models.GlobalOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Method")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GlobalOperations");
                });

            modelBuilder.Entity("PRIO.src.Modules.ControlAccess.Users.Infra.EF.Models.Session", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpiresIn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR");

                    b.Property<string>("UserHttpAgent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Sessions", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.ControlAccess.Users.Infra.EF.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPermissionDefault")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LastGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Password")
                        .HasMaxLength(90)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("GroupId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.ControlAccess.Users.Infra.EF.Models.UserOperation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GlobalOperationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GroupName")
                        .HasMaxLength(120)
                        .HasColumnType("varchar");

                    b.Property<string>("OperationName")
                        .HasMaxLength(120)
                        .HasColumnType("varchar");

                    b.Property<Guid?>("UserPermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GlobalOperationId");

                    b.HasIndex("UserPermissionId");

                    b.ToTable("UserOperations", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.ControlAccess.Users.Infra.EF.Models.UserPermission", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupMenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GroupName")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MenuIcon")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<Guid?>("MenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MenuName")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("MenuOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuRoute")
                        .HasMaxLength(120)
                        .HasColumnType("VARCHAR");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("hasChildren")
                        .HasColumnType("bit");

                    b.Property<bool?>("hasParent")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("GroupMenuId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPermissions", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.FileImport.XLSX.BTPS.Infra.EF.Models.BTP", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BTPSheet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CellBSW")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CellBTPNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CellDuration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CellFinalDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CellInitialDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CellMPointGas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CellMPointOil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CellMPointWater")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CellPotencialGas")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CellPotencialLiquid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CellPotencialOil")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CellPotencialWater")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CellRGO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CellWellAlignmentData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CellWellAlignmentHour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CellWellName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileContent")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("Mutable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BTPs", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.FileImport.XLSX.BTPS.Infra.EF.Models.BTPBase64", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileContent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("BTPBases64", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.FileImport.XLSX.BTPS.Infra.EF.Models.BTPData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplicationDate")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<decimal>("BSW")
                        .HasPrecision(15, 5)
                        .HasColumnType("decimal");

                    b.Property<Guid>("BTPBase64Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BTPId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BTPNumber")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("BTPSheet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("FinalDate")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("InitialDate")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<string>("MPointGas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MPointOil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MPointWater")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PotencialGas")
                        .HasPrecision(15, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal>("PotencialGasPerHour")
                        .HasPrecision(15, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal>("PotencialLiquid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PotencialLiquidPerHour")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PotencialOil")
                        .HasPrecision(15, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal>("PotencialOilPerHour")
                        .HasPrecision(15, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal>("PotencialWater")
                        .HasPrecision(15, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal>("PotencialWaterPerHour")
                        .HasPrecision(15, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal>("RGO")
                        .HasPrecision(15, 5)
                        .HasColumnType("decimal");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("WellAlignmentData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WellAlignmentHour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("WellId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WellName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BTPBase64Id")
                        .IsUnique();

                    b.HasIndex("WellId");

                    b.ToTable("BTPDatas", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.FileImport.XLSX.BTPS.Infra.EF.Models.ValidateBTP", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApplicationDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("BTPId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<Guid>("WellId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Validates");
                });

            modelBuilder.Entity("PRIO.src.Modules.FileImport.XML.NFSMS.Infra.EF.Models.NFSM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar");

                    b.Property<string>("CodeFailure")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfOcurrence")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionFailure")
                        .HasColumnType("text");

                    b.Property<DateTime>("DetectionDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ImportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InstallationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MeasuringPointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Methodology")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar");

                    b.Property<string>("ReponsibleReport")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("TypeOfFailure")
                        .IsRequired()
                        .HasColumnType("smallint");

                    b.Property<string>("TypeOfNotification")
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ImportId")
                        .IsUnique();

                    b.HasIndex("InstallationId");

                    b.HasIndex("MeasuringPointId");

                    b.ToTable("NFSMs", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.FileImport.XML.NFSMS.Infra.EF.Models.NFSMHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileAcronym")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("char");

                    b.Property<string>("FileContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("varchar");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("char");

                    b.Property<DateTime>("ImportedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ImportedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("MeasuredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeOperation")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("ImportedById");

                    b.ToTable("NFSMImportHistories", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.FileImport.XML.NFSMS.Infra.EF.Models.NFSMsProductions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Bsw")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BswMax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("MeasuredAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("NFSMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("VolumeAfter")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("VolumeBefore")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.HasKey("Id");

                    b.HasIndex("NFSMId");

                    b.HasIndex("ProductionId");

                    b.ToTable("NFSMsProductions", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Hierarchy.Clusters.Infra.EF.Models.Cluster", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Clusters", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Hierarchy.Completions.Infra.EF.Models.Completion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("AllocationReservoir")
                        .HasPrecision(3, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("BaseOfPerforated")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<Guid?>("ReservoirId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("TopOfPerforated")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WellId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReservoirId");

                    b.HasIndex("UserId");

                    b.HasIndex("WellId");

                    b.ToTable("Completions", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Hierarchy.Fields.Infra.EF.Models.Field", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Basin")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CodField")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("InstallationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("State")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InstallationId");

                    b.HasIndex("UserId");

                    b.ToTable("Fields", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Hierarchy.Fields.Infra.EF.Models.FieldFR", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DailyProductionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("FRGas")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("FROil")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("FRWater")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal");

                    b.Property<Guid>("FieldId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("ProductionInField")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DailyProductionId");

                    b.HasIndex("FieldId");

                    b.ToTable("FieldsFRs", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Hierarchy.Installations.Infra.EF.Models.Installation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClusterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodInstallationAnp")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("GasSafetyBurnVolume")
                        .HasPrecision(10, 4)
                        .HasColumnType("decimal");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProcessingUnit")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("UepCod")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("UepName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClusterId");

                    b.HasIndex("UserId");

                    b.ToTable("Installations", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Hierarchy.Installations.Infra.EF.Models.InstallationBTP", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BTPId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InstallationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BTPId");

                    b.HasIndex("InstallationId");

                    b.ToTable("IntallationsBTPs", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Hierarchy.Reservoirs.Infra.EF.Models.Reservoir", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ZoneId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("ZoneId");

                    b.ToTable("Reservoirs", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Hierarchy.Wells.Infra.EF.Models.Well", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ArtificialLift")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CategoryAnp")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CategoryOperator")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CategoryReclassificationAnp")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CodWell")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CodWellAnp")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CoordX")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CoordY")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DATETIME");

                    b.Property<string>("DatumHorizontal")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FieldId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Latitude4C")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("LatitudeDD")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Longitude4C")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("LongitudeDD")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<bool?>("StatusOperator")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("TypeBaseCoordinate")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("DATETIME");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("WaterDepth")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<string>("WellOperatorName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("UserId");

                    b.ToTable("Wells", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Hierarchy.Zones.Infra.EF.Models.Zone", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodZone")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FieldId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("UserId");

                    b.ToTable("Zones", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.Equipments.Infra.EF.Models.Bsw", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DHA_FALHA_BSW_039")
                        .HasColumnType("date");

                    b.Property<double?>("DHA_PCT_BSW_039")
                        .HasPrecision(3, 2)
                        .HasColumnType("float");

                    b.Property<double?>("DHA_PCT_MAXIMO_BSW_039")
                        .HasPrecision(3, 2)
                        .HasColumnType("float");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MeasurementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MeasurementId");

                    b.ToTable("BSWS_039", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.Equipments.Infra.EF.Models.Calibration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DHA_CERTIFICADO_ANTERIOR_039")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("DHA_CERTIFICADO_ATUAL_039")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<DateTime?>("DHA_FALHA_CALIBRACAO_039")
                        .HasColumnType("date");

                    b.Property<double?>("DHA_NUM_FATOR_CALIBRACAO_ANTERIOR_039")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<double?>("DHA_NUM_FATOR_CALIBRACAO_ATUAL_039")
                        .HasPrecision(5, 5)
                        .HasColumnType("float");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MeasurementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MeasurementId");

                    b.ToTable("Calibrations_039", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.Equipments.Infra.EF.Models.FileType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Acronym")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid?>("ImportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FileTypes", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.Equipments.Infra.EF.Models.Measurement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BswManual_001")
                        .HasPrecision(8, 4)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("CE_LIMITE_SPRR_ALARME_003")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal");

                    b.Property<string>("COD_FALHA_039")
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("COD_FALHA_SUPERIOR_039")
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("COD_INSTALACAO_001")
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("COD_INSTALACAO_002")
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("COD_INSTALACAO_003")
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("COD_TAG_EQUIPAMENTO_039")
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("COD_TAG_PONTO_MEDICAO_001")
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("COD_TAG_PONTO_MEDICAO_002")
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("COD_TAG_PONTO_MEDICAO_003")
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("COD_TAG_PONTO_MEDICAO_039")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DHA_COD_INSTALACAO_039")
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<DateTime?>("DHA_COLETA_001")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DHA_COLETA_002")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DHA_COLETA_003")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DHA_DETECCAO_039")
                        .HasColumnType("datetime");

                    b.Property<string>("DHA_DSC_ACAO_039")
                        .HasColumnType("text");

                    b.Property<string>("DHA_DSC_FALHA_039")
                        .HasColumnType("text");

                    b.Property<string>("DHA_DSC_METODOLOGIA_039")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DHA_FIM_PERIODO_MEDICAO_001")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DHA_FIM_PERIODO_MEDICAO_002")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DHA_FIM_PERIODO_MEDICAO_003")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DHA_INICIO_PERIODO_MEDICAO_001")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DHA_INICIO_PERIODO_MEDICAO_002")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DHA_INICIO_PERIODO_MEDICAO_003")
                        .HasColumnType("datetime");

                    b.Property<string>("DHA_NOM_RESPONSAVEL_RELATO_039")
                        .HasMaxLength(155)
                        .HasColumnType("varchar");

                    b.Property<string>("DHA_NUM_PREVISAO_RETORNO_DIAS_039")
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<string>("DHA_NUM_SERIE_EQUIPAMENTO_039")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<DateTime?>("DHA_OCORRENCIA_039")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DHA_RETORNO_039")
                        .HasColumnType("datetime");

                    b.Property<string>("DSC_ESTADO_INSNO_CASO_FALHA_001")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("DSC_ESTADO_INSNO_CASO_FALHA_002")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("DSC_ESTADO_INSNO_CASO_FALHA_1_003")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("DSC_ESTADO_INSNO_CASO_FALHA_2_003")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("DSC_ESTADO_INSNO_CASO_FALHA_3_003")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("DSC_ESTADO_INSTRUMENTO_FALHA_002")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("DSC_ESTADO_INSTRUMENTO_FALHA_003")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("DSC_ESTADO_INSTRUMENTO_FALHA_1_001")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("DSC_ESTADO_INSTRUMENTO_FALHA_2_001")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("DSC_ESTADO_INSTRUMENTO_FALHA_3_001")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("DSC_LCLZO_TMDA_PRSO_DFRNL_003")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("DSC_MATERIAL_CNSTO_TRCHO_MDCO_003")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DSC_MATERIAL_CONTRUCAO_PLACA_003")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DSC_NORMA_UTILIZADA_CALCULO_002")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<string>("DSC_NORMA_UTILIZADA_CALCULO_003")
                        .HasMaxLength(50)
                        .HasColumnType("varchar");

                    b.Property<short?>("DSC_TIPO_FALHA_039")
                        .HasColumnType("smallint");

                    b.Property<string>("DSC_VERSAO_SOFTWARE_001")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("DSC_VERSAO_SOFTWARE_002")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("DSC_VERSAO_SOFTWARE_003")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FileTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("ICE_CORRECAO_BSW_001")
                        .HasPrecision(16, 8)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_CORRECAO_PRESSAO_LIQUIDO_001")
                        .HasPrecision(16, 8)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_CRRCO_TEMPERATURA_LIQUIDO_001")
                        .HasPrecision(16, 8)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_CUTOFF_001")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_CUTOFF_002")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_DENSIDADADE_RELATIVA_001")
                        .HasPrecision(16, 8)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_DENSIDADE_RELATIVA_002")
                        .HasPrecision(16, 8)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_DENSIDADE_RELATIVA_003")
                        .HasPrecision(16, 8)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_K_FACTOR_10_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_K_FACTOR_10_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_K_FACTOR_11_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_K_FACTOR_11_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_K_FACTOR_12_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_K_FACTOR_12_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_K_FACTOR_13_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_K_FACTOR_13_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_K_FACTOR_14_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_K_FACTOR_14_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_K_FACTOR_15_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_K_FACTOR_15_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_K_FACTOR_1_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_K_FACTOR_1_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_K_FACTOR_2_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_K_FACTOR_2_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_K_FACTOR_3_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_K_FACTOR_3_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_K_FACTOR_4_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_K_FACTOR_4_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_K_FACTOR_5_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_K_FACTOR_5_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_K_FACTOR_6_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_K_FACTOR_6_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_K_FACTOR_7_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_K_FACTOR_7_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_K_FACTOR_8_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_K_FACTOR_8_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_K_FACTOR_9_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_K_FACTOR_9_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_LIMITE_INFRR_ALARME_001")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_LIMITE_INFRR_ALARME_002")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_LIMITE_INFRR_ALARME_003")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_LIMITE_SPRR_ALARME_001")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_LIMITE_SPRR_ALARME_002")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_METER_FACTOR_10_001")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_METER_FACTOR_10_002")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_METER_FACTOR_11_001")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_METER_FACTOR_11_002")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_METER_FACTOR_12_001")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_METER_FACTOR_12_002")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_METER_FACTOR_13_001")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_METER_FACTOR_13_002")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_METER_FACTOR_14_001")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_METER_FACTOR_14_002")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_METER_FACTOR_15_001")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_METER_FACTOR_15_002")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_METER_FACTOR_1_001")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_METER_FACTOR_1_002")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_METER_FACTOR_2_001")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_METER_FACTOR_2_002")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_METER_FACTOR_3_001")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_METER_FACTOR_3_002")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_METER_FACTOR_4_001")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_METER_FACTOR_4_002")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_METER_FACTOR_5_001")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_METER_FACTOR_5_002")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_METER_FACTOR_6_001")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_METER_FACTOR_6_002")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_METER_FACTOR_7_001")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_METER_FACTOR_7_002")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_METER_FACTOR_8_001")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_METER_FACTOR_8_002")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_METER_FACTOR_9_001")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("ICE_METER_FACTOR_9_002")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<string>("IND_HABILITACAO_ALARME_1_001")
                        .HasMaxLength(1)
                        .HasColumnType("varchar");

                    b.Property<string>("IND_HABILITACAO_ALARME_1_002")
                        .HasMaxLength(1)
                        .HasColumnType("varchar");

                    b.Property<string>("IND_HABILITACAO_ALARME_1_003")
                        .HasMaxLength(1)
                        .HasColumnType("varchar");

                    b.Property<string>("IND_HABILITACAO_ALARME_2_001")
                        .HasMaxLength(1)
                        .HasColumnType("varchar");

                    b.Property<string>("IND_HABILITACAO_ALARME_2_002")
                        .HasMaxLength(1)
                        .HasColumnType("varchar");

                    b.Property<string>("IND_HABILITACAO_ALARME_2_003")
                        .HasMaxLength(1)
                        .HasColumnType("varchar");

                    b.Property<string>("IND_HABILITACAO_ALARME_3_001")
                        .HasMaxLength(1)
                        .HasColumnType("varchar");

                    b.Property<string>("IND_HABILITACAO_ALARME_3_002")
                        .HasMaxLength(1)
                        .HasColumnType("varchar");

                    b.Property<string>("IND_HABILITACAO_ALARME_3_003")
                        .HasMaxLength(1)
                        .HasColumnType("varchar");

                    b.Property<string>("IND_HABILITACAO_ALARME_4_001")
                        .HasMaxLength(1)
                        .HasColumnType("varchar");

                    b.Property<string>("IND_HABILITACAO_ALARME_4_003")
                        .HasMaxLength(1)
                        .HasColumnType("varchar");

                    b.Property<string>("IND_HABILITACAO_ALARME_5_001")
                        .HasMaxLength(1)
                        .HasColumnType("varchar");

                    b.Property<string>("IND_HABILITACAO_ALARME_5_003")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IND_TIPO_NOTIFICACAO_039")
                        .HasMaxLength(1)
                        .HasColumnType("char");

                    b.Property<string>("IND_TIPO_PRESSAO_CONSIDERADA_001")
                        .HasMaxLength(1)
                        .HasColumnType("char");

                    b.Property<string>("IND_TIPO_PRESSAO_CONSIDERADA_002")
                        .HasMaxLength(1)
                        .HasColumnType("char");

                    b.Property<string>("IND_TIPO_PRESSAO_CONSIDERADA_003")
                        .HasMaxLength(1)
                        .HasColumnType("char");

                    b.Property<string>("IND_TOMADA_PRESSAO_ESTATICA_003")
                        .HasMaxLength(1)
                        .HasColumnType("char");

                    b.Property<Guid>("InstallationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCalculated")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MED_BRUTO_MOVIMENTADO_002")
                        .HasPrecision(11, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_CORRIGIDO_MVMDO_002")
                        .HasPrecision(11, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_CORRIGIDO_MVMDO_003")
                        .HasPrecision(11, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_CUTOFF_KPA_1_003")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_CUTOFF_KPA_2_003")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_DENSIDADE_RELATIVA_001")
                        .HasPrecision(16, 8)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_DENSIDADE_RELATIVA_002")
                        .HasPrecision(16, 8)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_DENSIDADE_RELATIVA_003")
                        .HasPrecision(16, 8)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_DIAMETRO_REFERENCIA_003")
                        .HasPrecision(7, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_DIFERENCIAL_PRESSAO_003")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_DMTRO_INTRO_TRCHO_MDCO_003")
                        .HasPrecision(7, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_PRESSAO_ATMSA_001")
                        .HasPrecision(6, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_PRESSAO_ATMSA_002")
                        .HasPrecision(6, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_PRESSAO_ATMSA_003")
                        .HasPrecision(6, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_PRESSAO_ESTATICA_001")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_PRESSAO_ESTATICA_002")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_PRESSAO_ESTATICA_003")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_PRESSAO_RFRNA_001")
                        .HasPrecision(6, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_PRESSAO_RFRNA_002")
                        .HasPrecision(6, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_PRESSAO_RFRNA_003")
                        .HasPrecision(6, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_PRSO_ADOTADA_FALHA_001")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_PRSO_ADOTADA_FALHA_002")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_PRSO_ADOTADA_FALHA_1_003")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_PRSO_ADOTADA_FALHA_2_003")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_PRSO_ADOTADA_FALHA_3_003")
                        .HasMaxLength(50)
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_PRSO_LIMITE_SPRR_ALRME_001")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_PRSO_LIMITE_SPRR_ALRME_002")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_PRSO_LIMITE_SPRR_ALRME_1_003")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_PRSO_LIMITE_SPRR_ALRME_2_003")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_PRSO_LIMITE_SPRR_ALRME_3_003")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_PRSO_LIMITE_SPRR_ALRME_4_003")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_PRSO_LIMITE_SPRR_ALRME_5_003")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_PRSO_LMTE_INFRR_ALRME_001")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_PRSO_LMTE_INFRR_ALRME_002")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_PRSO_LMTE_INFRR_ALRME_1_003")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_PRSO_LMTE_INFRR_ALRME_2_003")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_PRSO_LMTE_INFRR_ALRME_3_003")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_PRSO_LMTE_INFRR_ALRME_4_003")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_PRSO_LMTE_INFRR_ALRME_5_003")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_TEMPERATURA_001")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_TEMPERATURA_1_002")
                        .HasPrecision(6, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_TEMPERATURA_1_003")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_TEMPERATURA_2_002")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_TEMPERATURA_2_003")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_TEMPERATURA_RFRNA_003")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_TMPTA_ADTTA_FALHA_001")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_TMPTA_ADTTA_FALHA_002")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_TMPTA_ADTTA_FALHA_003")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_TMPTA_FLUIDO_001")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_TMPTA_INFRR_ALRME_001")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_TMPTA_INFRR_ALRME_002")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_TMPTA_INFRR_ALRME_003")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_TMPTA_SPRR_ALARME_001")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_TMPTA_SPRR_ALARME_002")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_TMPTA_SPRR_ALARME_003")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_TMPTA_TRCHO_MDCO_003")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_VOLUME_BRTO_CRRGO_MVMDO_001")
                        .HasPrecision(11, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_VOLUME_BRUTO_MVMDO_001")
                        .HasPrecision(11, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_VOLUME_LIQUIDO_MVMDO_001")
                        .HasPrecision(11, 5)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_VOLUME_TTLZO_FIM_PRDO_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("MED_VOLUME_TTLZO_INCO_PRDO_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<Guid>("MeasurementHistoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MeasuringPointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("NFSMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NUM_SERIE_1_001")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_1_002")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_1_003")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_2_001")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_2_002")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_2_003")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_3_001")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_3_003")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_4_001")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_4_003")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_5_003")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_6_003")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_COMPUTADOR_VAZAO_001")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_COMPUTADOR_VAZAO_002")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_COMPUTADOR_VAZAO_003")
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_ELEMENTO_PRIMARIO_001")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_ELEMENTO_PRIMARIO_002")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<string>("NUM_SERIE_ELEMENTO_PRIMARIO_003")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<decimal?>("PCT_ADOTADO_CASO_FALHA_1_001")
                        .HasPrecision(6, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_ADOTADO_CASO_FALHA_2_001")
                        .HasPrecision(6, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_AGUA_002")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_AGUA_003")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_ARGONIO_002")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_ARGONIO_003")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_CO2_002")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_CO2_003")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_CO_002")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_CO_003")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_DECANO_002")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_DECANO_003")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_ETANO_002")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_ETANO_003")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_H2S_002")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_H2S_003")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_HELIO_002")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_HELIO_003")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_HEPTANO_002")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_HEPTANO_003")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_HEXANO_002")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_HEXANO_003")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_HIDROGENIO_002")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_HIDROGENIO_003")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_I_BUTANO_002")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_I_BUTANO_003")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_I_PENTANO_002")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_I_PENTANO_003")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_METANO_002")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_METANO_003")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_NITROGENIO_002")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_NITROGENIO_003")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_NONANO_002")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_NONANO_003")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_N_BUTANO_002")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_N_BUTANO_003")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_N_PENTANO_002")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_N_PENTANO_003")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_OCTANO_002")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_OCTANO_003")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_OXIGENIO_002")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_OXIGENIO_003")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_PROPANO_002")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_CROMATOGRAFIA_PROPANO_003")
                        .HasPrecision(12, 6)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_LIMITE_INFERIOR_1_001")
                        .HasPrecision(6, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_LIMITE_INFERIOR_2_001")
                        .HasPrecision(6, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_LIMITE_SUPERIOR_1_001")
                        .HasPrecision(6, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PCT_LIMITE_SUPERIOR_2_001")
                        .HasPrecision(6, 3)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PRZ_DURACAO_FLUXO_EFETIVO_002")
                        .HasPrecision(8, 4)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("PRZ_DURACAO_FLUXO_EFETIVO_003")
                        .HasPrecision(8, 4)
                        .HasColumnType("decimal");

                    b.Property<Guid>("ProductionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("QTD_PULSOS_K_FACTOR_10_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_K_FACTOR_10_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_K_FACTOR_11_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_K_FACTOR_11_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_K_FACTOR_12_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_K_FACTOR_12_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_K_FACTOR_13_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_K_FACTOR_13_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_K_FACTOR_14_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_K_FACTOR_14_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_K_FACTOR_15_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_K_FACTOR_15_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_K_FACTOR_1_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_K_FACTOR_1_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_K_FACTOR_2_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_K_FACTOR_2_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_K_FACTOR_3_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_K_FACTOR_3_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_K_FACTOR_4_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_K_FACTOR_4_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_K_FACTOR_5_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_K_FACTOR_5_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_K_FACTOR_6_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_K_FACTOR_6_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_K_FACTOR_7_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_K_FACTOR_7_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_K_FACTOR_8_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_K_FACTOR_8_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_K_FACTOR_9_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_K_FACTOR_9_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_METER_FACTOR_10_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_METER_FACTOR_10_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_METER_FACTOR_11_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_METER_FACTOR_11_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_METER_FACTOR_12_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_METER_FACTOR_12_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_METER_FACTOR_13_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_METER_FACTOR_13_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_METER_FACTOR_14_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_METER_FACTOR_14_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_METER_FACTOR_15_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_METER_FACTOR_15_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_METER_FACTOR_1_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_METER_FACTOR_1_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_METER_FACTOR_2_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_METER_FACTOR_2_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_METER_FACTOR_3_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_METER_FACTOR_3_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_METER_FACTOR_4_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_METER_FACTOR_4_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_METER_FACTOR_5_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_METER_FACTOR_5_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_METER_FACTOR_6_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_METER_FACTOR_6_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_METER_FACTOR_7_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_METER_FACTOR_7_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_METER_FACTOR_8_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_METER_FACTOR_8_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_METER_FACTOR_9_001")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<decimal?>("QTD_PULSOS_METER_FACTOR_9_002")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal");

                    b.Property<bool?>("StatusMeasuringPoint")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("VolumeAfterManualBsw_001")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FileTypeId");

                    b.HasIndex("InstallationId");

                    b.HasIndex("MeasurementHistoryId");

                    b.HasIndex("MeasuringPointId");

                    b.HasIndex("NFSMId");

                    b.HasIndex("ProductionId");

                    b.HasIndex("UserId");

                    b.ToTable("Measurements", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.Equipments.Infra.EF.Models.MeasuringEquipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChannelNumber")
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<string>("CommunicationProtocol")
                        .HasMaxLength(60)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Fluid")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar");

                    b.Property<bool?>("HasSeal")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<bool?>("InOperation")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("MVS")
                        .HasColumnType("bit");

                    b.Property<Guid?>("MeasuringPointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Model")
                        .HasMaxLength(60)
                        .HasColumnType("varchar");

                    b.Property<string>("SerieNumber")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar");

                    b.Property<string>("TagEquipment")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar");

                    b.Property<string>("TagMeasuringPoint")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar");

                    b.Property<string>("TypeEquipment")
                        .HasMaxLength(60)
                        .HasColumnType("varchar");

                    b.Property<string>("TypePoint")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MeasuringPointId");

                    b.HasIndex("UserId");

                    b.ToTable("MeasuringEquipments", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.Equipments.Infra.EF.Models.Volume", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DHA_MEDICAO_039")
                        .HasColumnType("date");

                    b.Property<double?>("DHA_MED_DECLARADO_039")
                        .HasPrecision(8, 6)
                        .HasColumnType("float");

                    b.Property<double?>("DHA_MED_REGISTRADO_039")
                        .HasPrecision(8, 6)
                        .HasColumnType("float");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MeasurementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MeasurementId");

                    b.ToTable("Volumes_039", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.AssistanceGas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GasVolumeCalculationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApplicable")
                        .HasColumnType("bit");

                    b.Property<Guid>("MeasuringPointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StaticLocalMeasuringPoint")
                        .IsRequired()
                        .HasMaxLength(260)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GasVolumeCalculationId");

                    b.HasIndex("MeasuringPointId")
                        .IsUnique();

                    b.ToTable("AssistanceGases", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.ExportGas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GasVolumeCalculationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApplicable")
                        .HasColumnType("bit");

                    b.Property<Guid>("MeasuringPointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StaticLocalMeasuringPoint")
                        .IsRequired()
                        .HasMaxLength(260)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GasVolumeCalculationId");

                    b.HasIndex("MeasuringPointId")
                        .IsUnique();

                    b.ToTable("ExportGases", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.GasVolumeCalculation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InstallationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InstallationId")
                        .IsUnique();

                    b.ToTable("GasVolumeCalculations", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.HPFlare", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GasVolumeCalculationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApplicable")
                        .HasColumnType("bit");

                    b.Property<Guid>("MeasuringPointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StaticLocalMeasuringPoint")
                        .IsRequired()
                        .HasMaxLength(260)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GasVolumeCalculationId");

                    b.HasIndex("MeasuringPointId")
                        .IsUnique();

                    b.ToTable("HpFlares", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.HighPressureGas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GasVolumeCalculationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApplicable")
                        .HasColumnType("bit");

                    b.Property<Guid>("MeasuringPointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StaticLocalMeasuringPoint")
                        .IsRequired()
                        .HasMaxLength(260)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GasVolumeCalculationId");

                    b.HasIndex("MeasuringPointId")
                        .IsUnique();

                    b.ToTable("HighPressureGases", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.ImportGas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GasVolumeCalculationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApplicable")
                        .HasColumnType("bit");

                    b.Property<Guid>("MeasuringPointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StaticLocalMeasuringPoint")
                        .IsRequired()
                        .HasMaxLength(260)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GasVolumeCalculationId");

                    b.HasIndex("MeasuringPointId")
                        .IsUnique();

                    b.ToTable("ImportGases", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.LPFlare", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GasVolumeCalculationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApplicable")
                        .HasColumnType("bit");

                    b.Property<Guid>("MeasuringPointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StaticLocalMeasuringPoint")
                        .IsRequired()
                        .HasMaxLength(260)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GasVolumeCalculationId");

                    b.HasIndex("MeasuringPointId")
                        .IsUnique();

                    b.ToTable("LPFlares", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.LowPressureGas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GasVolumeCalculationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApplicable")
                        .HasColumnType("bit");

                    b.Property<Guid>("MeasuringPointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StaticLocalMeasuringPoint")
                        .IsRequired()
                        .HasMaxLength(260)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GasVolumeCalculationId");

                    b.HasIndex("MeasuringPointId")
                        .IsUnique();

                    b.ToTable("LowPressureGases", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.PilotGas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GasVolumeCalculationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApplicable")
                        .HasColumnType("bit");

                    b.Property<Guid>("MeasuringPointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StaticLocalMeasuringPoint")
                        .IsRequired()
                        .HasMaxLength(260)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GasVolumeCalculationId");

                    b.HasIndex("MeasuringPointId")
                        .IsUnique();

                    b.ToTable("PilotGases", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.PurgeGas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GasVolumeCalculationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApplicable")
                        .HasColumnType("bit");

                    b.Property<Guid>("MeasuringPointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StaticLocalMeasuringPoint")
                        .IsRequired()
                        .HasMaxLength(260)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GasVolumeCalculationId");

                    b.HasIndex("MeasuringPointId")
                        .IsUnique();

                    b.ToTable("PurgeGases", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.Measurements.Infra.EF.Models.MeasurementHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileAcronym")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.Property<string>("FileContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("varchar");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar");

                    b.Property<DateTime>("ImportedAt")
                        .HasColumnType("date");

                    b.Property<Guid>("ImportedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("MeasuredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeOperation")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("ImportedById");

                    b.ToTable("MeasurementsHistories", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.MeasuringPoints.Infra.EF.Models.MeasuringPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DinamicLocalMeasuringPoint")
                        .IsRequired()
                        .HasMaxLength(260)
                        .HasColumnType("VARCHAR");

                    b.Property<Guid>("InstallationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("TagPointMeasuring")
                        .IsRequired()
                        .HasMaxLength(260)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InstallationId");

                    b.ToTable("MeasuringPoints", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.OilVolumeCalculations.Infra.EF.Models.DOR", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApplicable")
                        .HasColumnType("bit");

                    b.Property<Guid>("MeasuringPointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OilVolumeCalculationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StaticLocalMeasuringPoint")
                        .IsRequired()
                        .HasMaxLength(260)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MeasuringPointId")
                        .IsUnique();

                    b.HasIndex("OilVolumeCalculationId");

                    b.ToTable("DORs", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.OilVolumeCalculations.Infra.EF.Models.DrainVolume", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApplicable")
                        .HasColumnType("bit");

                    b.Property<Guid>("MeasuringPointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OilVolumeCalculationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StaticLocalMeasuringPoint")
                        .IsRequired()
                        .HasMaxLength(260)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MeasuringPointId")
                        .IsUnique();

                    b.HasIndex("OilVolumeCalculationId");

                    b.ToTable("DrainVolumes", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.OilVolumeCalculations.Infra.EF.Models.OilVolumeCalculation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InstallationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InstallationId")
                        .IsUnique();

                    b.ToTable("OilVoumeCalculations", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.OilVolumeCalculations.Infra.EF.Models.Section", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApplicable")
                        .HasColumnType("bit");

                    b.Property<Guid>("MeasuringPointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OilVolumeCalculationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StaticLocalMeasuringPoint")
                        .IsRequired()
                        .HasMaxLength(260)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MeasuringPointId")
                        .IsUnique();

                    b.HasIndex("OilVolumeCalculationId");

                    b.ToTable("Sections", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.OilVolumeCalculations.Infra.EF.Models.TOGRecoveredOil", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApplicable")
                        .HasColumnType("bit");

                    b.Property<Guid>("MeasuringPointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OilVolumeCalculationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StaticLocalMeasuringPoint")
                        .IsRequired()
                        .HasMaxLength(260)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MeasuringPointId")
                        .IsUnique();

                    b.HasIndex("OilVolumeCalculationId");

                    b.ToTable("TOGRecoveredOils", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.Productions.Infra.EF.Models.Gas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EmergencialBurn")
                        .HasPrecision(10, 5)
                        .HasColumnType("DECIMAL");

                    b.Property<decimal>("ForCommissioningBurn")
                        .HasPrecision(10, 5)
                        .HasColumnType("DECIMAL");

                    b.Property<Guid?>("GasDiferencialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GasLinearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("LimitOperacionalBurn")
                        .HasPrecision(10, 5)
                        .HasColumnType("DECIMAL");

                    b.Property<decimal>("OthersBurn")
                        .HasPrecision(10, 5)
                        .HasColumnType("DECIMAL");

                    b.Property<decimal>("ScheduledStopBurn")
                        .HasPrecision(10, 5)
                        .HasColumnType("DECIMAL");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("VentedGas")
                        .HasPrecision(10, 5)
                        .HasColumnType("DECIMAL");

                    b.Property<decimal>("WellTestBurn")
                        .HasPrecision(10, 5)
                        .HasColumnType("DECIMAL");

                    b.HasKey("Id");

                    b.HasIndex("GasDiferencialId")
                        .IsUnique()
                        .HasFilter("[GasDiferencialId] IS NOT NULL");

                    b.HasIndex("GasLinearId")
                        .IsUnique()
                        .HasFilter("[GasLinearId] IS NOT NULL");

                    b.ToTable("Gases", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.Productions.Infra.EF.Models.GasDiferencial", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BurntGas")
                        .HasPrecision(10, 5)
                        .HasColumnType("DECIMAL");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ExportedGas")
                        .HasPrecision(10, 5)
                        .HasColumnType("DECIMAL");

                    b.Property<decimal>("FuelGas")
                        .HasPrecision(10, 5)
                        .HasColumnType("DECIMAL");

                    b.Property<decimal>("ImportedGas")
                        .HasPrecision(10, 5)
                        .HasColumnType("DECIMAL");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("StatusGas")
                        .HasColumnType("bit");

                    b.Property<decimal>("TotalGas")
                        .HasPrecision(10, 5)
                        .HasColumnType("DECIMAL");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GasesDiferencials", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.Productions.Infra.EF.Models.GasLinear", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BurntGas")
                        .HasPrecision(10, 5)
                        .HasColumnType("DECIMAL");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ExportedGas")
                        .HasPrecision(10, 5)
                        .HasColumnType("DECIMAL");

                    b.Property<decimal>("FuelGas")
                        .HasPrecision(10, 5)
                        .HasColumnType("DECIMAL");

                    b.Property<decimal>("ImportedGas")
                        .HasPrecision(10, 5)
                        .HasColumnType("DECIMAL");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("StatusGas")
                        .HasColumnType("bit");

                    b.Property<decimal>("TotalGas")
                        .HasPrecision(10, 5)
                        .HasColumnType("DECIMAL");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GasesLinears", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.Productions.Infra.EF.Models.Oil", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("BswAverage")
                        .HasPrecision(4, 2)
                        .HasColumnType("DECIMAL");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("StatusOil")
                        .HasColumnType("bit");

                    b.Property<decimal>("TotalOil")
                        .HasPrecision(10, 5)
                        .HasColumnType("DECIMAL");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Oils", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.Productions.Infra.EF.Models.Production", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CalculatedImportedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CalculatedImportedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GasDiferencialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GasLinearId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InstallationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("MeasuredAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("OilId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("StatusProduction")
                        .HasColumnType("bit");

                    b.Property<decimal>("TotalProduction")
                        .HasPrecision(10, 5)
                        .HasColumnType("decimal");

                    b.HasKey("Id");

                    b.HasIndex("CalculatedImportedById");

                    b.HasIndex("GasDiferencialId")
                        .IsUnique()
                        .HasFilter("[GasDiferencialId] IS NOT NULL");

                    b.HasIndex("GasId")
                        .IsUnique()
                        .HasFilter("[GasId] IS NOT NULL");

                    b.HasIndex("GasLinearId")
                        .IsUnique()
                        .HasFilter("[GasLinearId] IS NOT NULL");

                    b.HasIndex("InstallationId");

                    b.HasIndex("OilId")
                        .IsUnique()
                        .HasFilter("[OilId] IS NOT NULL");

                    b.ToTable("Productions", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Shared.Auxiliaries.Infra.EF.Models.Auxiliary", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Option")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Route")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Select")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Table")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Auxiliaries");
                });

            modelBuilder.Entity("PRIO.src.Shared.SystemHistories.Infra.EF.Models.SystemHistory", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CurrentData")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FieldsChanged")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("PreviousData")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Table")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<Guid?>("TableItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TypeOperation")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("SystemHistories", (string)null);
                });

            modelBuilder.Entity("PRIO.src.Modules.ControlAccess.Groups.Infra.EF.Models.GroupOperation", b =>
                {
                    b.HasOne("PRIO.src.Modules.ControlAccess.Operations.Infra.EF.Models.GlobalOperation", "GlobalOperation")
                        .WithMany("GroupOperations")
                        .HasForeignKey("GlobalOperationId");

                    b.HasOne("PRIO.src.Modules.ControlAccess.Groups.Infra.EF.Models.GroupPermission", "GroupPermission")
                        .WithMany("Operations")
                        .HasForeignKey("GroupPermissionId");

                    b.Navigation("GlobalOperation");

                    b.Navigation("GroupPermission");
                });

            modelBuilder.Entity("PRIO.src.Modules.ControlAccess.Groups.Infra.EF.Models.GroupPermission", b =>
                {
                    b.HasOne("PRIO.src.Modules.ControlAccess.Groups.Infra.EF.Models.Group", "Group")
                        .WithMany("GroupPermissions")
                        .HasForeignKey("GroupId");

                    b.HasOne("PRIO.src.Modules.ControlAccess.Menus.Infra.EF.Models.Menu", "Menu")
                        .WithMany("GroupPermissions")
                        .HasForeignKey("MenuId");

                    b.Navigation("Group");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("PRIO.src.Modules.ControlAccess.Menus.Infra.EF.Models.Menu", b =>
                {
                    b.HasOne("PRIO.src.Modules.ControlAccess.Menus.Infra.EF.Models.Menu", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("PRIO.src.Modules.ControlAccess.Users.Infra.EF.Models.Session", b =>
                {
                    b.HasOne("PRIO.src.Modules.ControlAccess.Users.Infra.EF.Models.User", "User")
                        .WithOne("Session")
                        .HasForeignKey("PRIO.src.Modules.ControlAccess.Users.Infra.EF.Models.Session", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRIO.src.Modules.ControlAccess.Users.Infra.EF.Models.User", b =>
                {
                    b.HasOne("PRIO.src.Modules.ControlAccess.Groups.Infra.EF.Models.Group", "Group")
                        .WithMany("User")
                        .HasForeignKey("GroupId");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("PRIO.src.Modules.ControlAccess.Users.Infra.EF.Models.UserOperation", b =>
                {
                    b.HasOne("PRIO.src.Modules.ControlAccess.Operations.Infra.EF.Models.GlobalOperation", "GlobalOperation")
                        .WithMany("UserOperations")
                        .HasForeignKey("GlobalOperationId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("PRIO.src.Modules.ControlAccess.Users.Infra.EF.Models.UserPermission", "UserPermission")
                        .WithMany("UserOperation")
                        .HasForeignKey("UserPermissionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("GlobalOperation");

                    b.Navigation("UserPermission");
                });

            modelBuilder.Entity("PRIO.src.Modules.ControlAccess.Users.Infra.EF.Models.UserPermission", b =>
                {
                    b.HasOne("PRIO.src.Modules.ControlAccess.Groups.Infra.EF.Models.GroupPermission", "GroupMenu")
                        .WithMany("Permissions")
                        .HasForeignKey("GroupMenuId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.ControlAccess.Users.Infra.EF.Models.User", "User")
                        .WithMany("UserPermissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("GroupMenu");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRIO.src.Modules.FileImport.XLSX.BTPS.Infra.EF.Models.BTPBase64", b =>
                {
                    b.HasOne("PRIO.src.Modules.ControlAccess.Users.Infra.EF.Models.User", "User")
                        .WithMany("BTPBases64")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRIO.src.Modules.FileImport.XLSX.BTPS.Infra.EF.Models.BTPData", b =>
                {
                    b.HasOne("PRIO.src.Modules.FileImport.XLSX.BTPS.Infra.EF.Models.BTPBase64", "BTPBase64")
                        .WithOne("BTPData")
                        .HasForeignKey("PRIO.src.Modules.FileImport.XLSX.BTPS.Infra.EF.Models.BTPData", "BTPBase64Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.Hierarchy.Wells.Infra.EF.Models.Well", "Well")
                        .WithMany("BTPDatas")
                        .HasForeignKey("WellId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BTPBase64");

                    b.Navigation("Well");
                });

            modelBuilder.Entity("PRIO.src.Modules.FileImport.XML.NFSMS.Infra.EF.Models.NFSM", b =>
                {
                    b.HasOne("PRIO.src.Modules.FileImport.XML.NFSMS.Infra.EF.Models.NFSMHistory", "ImportHistory")
                        .WithOne("NFSM")
                        .HasForeignKey("PRIO.src.Modules.FileImport.XML.NFSMS.Infra.EF.Models.NFSM", "ImportId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.Hierarchy.Installations.Infra.EF.Models.Installation", "Installation")
                        .WithMany("NFSMs")
                        .HasForeignKey("InstallationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.Measuring.MeasuringPoints.Infra.EF.Models.MeasuringPoint", "MeasuringPoint")
                        .WithMany("NFSMs")
                        .HasForeignKey("MeasuringPointId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ImportHistory");

                    b.Navigation("Installation");

                    b.Navigation("MeasuringPoint");
                });

            modelBuilder.Entity("PRIO.src.Modules.FileImport.XML.NFSMS.Infra.EF.Models.NFSMHistory", b =>
                {
                    b.HasOne("PRIO.src.Modules.ControlAccess.Users.Infra.EF.Models.User", "ImportedBy")
                        .WithMany("NFSMImportedHistories")
                        .HasForeignKey("ImportedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ImportedBy");
                });

            modelBuilder.Entity("PRIO.src.Modules.FileImport.XML.NFSMS.Infra.EF.Models.NFSMsProductions", b =>
                {
                    b.HasOne("PRIO.src.Modules.FileImport.XML.NFSMS.Infra.EF.Models.NFSM", "NFSM")
                        .WithMany("Productions")
                        .HasForeignKey("NFSMId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.Measuring.Productions.Infra.EF.Models.Production", "Production")
                        .WithMany("NFSMs")
                        .HasForeignKey("ProductionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("NFSM");

                    b.Navigation("Production");
                });

            modelBuilder.Entity("PRIO.src.Modules.Hierarchy.Clusters.Infra.EF.Models.Cluster", b =>
                {
                    b.HasOne("PRIO.src.Modules.ControlAccess.Users.Infra.EF.Models.User", "User")
                        .WithMany("Clusters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRIO.src.Modules.Hierarchy.Completions.Infra.EF.Models.Completion", b =>
                {
                    b.HasOne("PRIO.src.Modules.Hierarchy.Reservoirs.Infra.EF.Models.Reservoir", "Reservoir")
                        .WithMany("Completions")
                        .HasForeignKey("ReservoirId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("PRIO.src.Modules.ControlAccess.Users.Infra.EF.Models.User", "User")
                        .WithMany("Completions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.Hierarchy.Wells.Infra.EF.Models.Well", "Well")
                        .WithMany("Completions")
                        .HasForeignKey("WellId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Reservoir");

                    b.Navigation("User");

                    b.Navigation("Well");
                });

            modelBuilder.Entity("PRIO.src.Modules.Hierarchy.Fields.Infra.EF.Models.Field", b =>
                {
                    b.HasOne("PRIO.src.Modules.Hierarchy.Installations.Infra.EF.Models.Installation", "Installation")
                        .WithMany("Fields")
                        .HasForeignKey("InstallationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.ControlAccess.Users.Infra.EF.Models.User", "User")
                        .WithMany("Fields")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Installation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRIO.src.Modules.Hierarchy.Fields.Infra.EF.Models.FieldFR", b =>
                {
                    b.HasOne("PRIO.src.Modules.Measuring.Productions.Infra.EF.Models.Production", "DailyProduction")
                        .WithMany("FieldsFR")
                        .HasForeignKey("DailyProductionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.Hierarchy.Fields.Infra.EF.Models.Field", "Field")
                        .WithMany("FRs")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DailyProduction");

                    b.Navigation("Field");
                });

            modelBuilder.Entity("PRIO.src.Modules.Hierarchy.Installations.Infra.EF.Models.Installation", b =>
                {
                    b.HasOne("PRIO.src.Modules.Hierarchy.Clusters.Infra.EF.Models.Cluster", "Cluster")
                        .WithMany("Installations")
                        .HasForeignKey("ClusterId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.ControlAccess.Users.Infra.EF.Models.User", "User")
                        .WithMany("Installations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cluster");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRIO.src.Modules.Hierarchy.Installations.Infra.EF.Models.InstallationBTP", b =>
                {
                    b.HasOne("PRIO.src.Modules.FileImport.XLSX.BTPS.Infra.EF.Models.BTP", "BTP")
                        .WithMany("BTPs")
                        .HasForeignKey("BTPId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.Hierarchy.Installations.Infra.EF.Models.Installation", "Installation")
                        .WithMany("BTPs")
                        .HasForeignKey("InstallationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BTP");

                    b.Navigation("Installation");
                });

            modelBuilder.Entity("PRIO.src.Modules.Hierarchy.Reservoirs.Infra.EF.Models.Reservoir", b =>
                {
                    b.HasOne("PRIO.src.Modules.ControlAccess.Users.Infra.EF.Models.User", "User")
                        .WithMany("Reservoirs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.Hierarchy.Zones.Infra.EF.Models.Zone", "Zone")
                        .WithMany("Reservoirs")
                        .HasForeignKey("ZoneId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("PRIO.src.Modules.Hierarchy.Wells.Infra.EF.Models.Well", b =>
                {
                    b.HasOne("PRIO.src.Modules.Hierarchy.Fields.Infra.EF.Models.Field", "Field")
                        .WithMany("Wells")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.ControlAccess.Users.Infra.EF.Models.User", "User")
                        .WithMany("Wells")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Field");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRIO.src.Modules.Hierarchy.Zones.Infra.EF.Models.Zone", b =>
                {
                    b.HasOne("PRIO.src.Modules.Hierarchy.Fields.Infra.EF.Models.Field", "Field")
                        .WithMany("Zones")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.ControlAccess.Users.Infra.EF.Models.User", "User")
                        .WithMany("Zones")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Field");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.Equipments.Infra.EF.Models.Bsw", b =>
                {
                    b.HasOne("PRIO.src.Modules.Measuring.Equipments.Infra.EF.Models.Measurement", "Measurement")
                        .WithMany("LISTA_BSW")
                        .HasForeignKey("MeasurementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Measurement");
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.Equipments.Infra.EF.Models.Calibration", b =>
                {
                    b.HasOne("PRIO.src.Modules.Measuring.Equipments.Infra.EF.Models.Measurement", "Measurement")
                        .WithMany("LISTA_CALIBRACAO")
                        .HasForeignKey("MeasurementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Measurement");
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.Equipments.Infra.EF.Models.Measurement", b =>
                {
                    b.HasOne("PRIO.src.Modules.Measuring.Equipments.Infra.EF.Models.FileType", "FileType")
                        .WithMany("Measurements")
                        .HasForeignKey("FileTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.Hierarchy.Installations.Infra.EF.Models.Installation", "Installation")
                        .WithMany("Measurements")
                        .HasForeignKey("InstallationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.Measuring.Measurements.Infra.EF.Models.MeasurementHistory", "MeasurementHistory")
                        .WithMany("Measurements")
                        .HasForeignKey("MeasurementHistoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.Measuring.MeasuringPoints.Infra.EF.Models.MeasuringPoint", "MeasuringPoint")
                        .WithMany("Measurements")
                        .HasForeignKey("MeasuringPointId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.FileImport.XML.NFSMS.Infra.EF.Models.NFSM", "NFSM")
                        .WithMany("Measurements")
                        .HasForeignKey("NFSMId");

                    b.HasOne("PRIO.src.Modules.Measuring.Productions.Infra.EF.Models.Production", "Production")
                        .WithMany("Measurements")
                        .HasForeignKey("ProductionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.ControlAccess.Users.Infra.EF.Models.User", "User")
                        .WithMany("Measurements")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FileType");

                    b.Navigation("Installation");

                    b.Navigation("MeasurementHistory");

                    b.Navigation("MeasuringPoint");

                    b.Navigation("NFSM");

                    b.Navigation("Production");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.Equipments.Infra.EF.Models.MeasuringEquipment", b =>
                {
                    b.HasOne("PRIO.src.Modules.Measuring.MeasuringPoints.Infra.EF.Models.MeasuringPoint", "MeasuringPoint")
                        .WithMany("MeasuringEquipments")
                        .HasForeignKey("MeasuringPointId");

                    b.HasOne("PRIO.src.Modules.ControlAccess.Users.Infra.EF.Models.User", "User")
                        .WithMany("MeasuringEquipments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("MeasuringPoint");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.Equipments.Infra.EF.Models.Volume", b =>
                {
                    b.HasOne("PRIO.src.Modules.Measuring.Equipments.Infra.EF.Models.Measurement", "Measurement")
                        .WithMany("LISTA_VOLUME")
                        .HasForeignKey("MeasurementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Measurement");
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.AssistanceGas", b =>
                {
                    b.HasOne("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.GasVolumeCalculation", "GasVolumeCalculation")
                        .WithMany("AssistanceGases")
                        .HasForeignKey("GasVolumeCalculationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.Measuring.MeasuringPoints.Infra.EF.Models.MeasuringPoint", "MeasuringPoint")
                        .WithOne("AssistanceGas")
                        .HasForeignKey("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.AssistanceGas", "MeasuringPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GasVolumeCalculation");

                    b.Navigation("MeasuringPoint");
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.ExportGas", b =>
                {
                    b.HasOne("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.GasVolumeCalculation", "GasVolumeCalculation")
                        .WithMany("ExportGases")
                        .HasForeignKey("GasVolumeCalculationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.Measuring.MeasuringPoints.Infra.EF.Models.MeasuringPoint", "MeasuringPoint")
                        .WithOne("ExportGas")
                        .HasForeignKey("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.ExportGas", "MeasuringPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GasVolumeCalculation");

                    b.Navigation("MeasuringPoint");
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.GasVolumeCalculation", b =>
                {
                    b.HasOne("PRIO.src.Modules.Hierarchy.Installations.Infra.EF.Models.Installation", "Installation")
                        .WithOne("GasVolumeCalculation")
                        .HasForeignKey("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.GasVolumeCalculation", "InstallationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Installation");
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.HPFlare", b =>
                {
                    b.HasOne("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.GasVolumeCalculation", "GasVolumeCalculation")
                        .WithMany("HPFlares")
                        .HasForeignKey("GasVolumeCalculationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.Measuring.MeasuringPoints.Infra.EF.Models.MeasuringPoint", "MeasuringPoint")
                        .WithOne("HPFlare")
                        .HasForeignKey("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.HPFlare", "MeasuringPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GasVolumeCalculation");

                    b.Navigation("MeasuringPoint");
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.HighPressureGas", b =>
                {
                    b.HasOne("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.GasVolumeCalculation", "GasVolumeCalculation")
                        .WithMany("HighPressureGases")
                        .HasForeignKey("GasVolumeCalculationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.Measuring.MeasuringPoints.Infra.EF.Models.MeasuringPoint", "MeasuringPoint")
                        .WithOne("HighPressureGas")
                        .HasForeignKey("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.HighPressureGas", "MeasuringPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GasVolumeCalculation");

                    b.Navigation("MeasuringPoint");
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.ImportGas", b =>
                {
                    b.HasOne("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.GasVolumeCalculation", "GasVolumeCalculation")
                        .WithMany("ImportGases")
                        .HasForeignKey("GasVolumeCalculationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.Measuring.MeasuringPoints.Infra.EF.Models.MeasuringPoint", "MeasuringPoint")
                        .WithOne("ImportGas")
                        .HasForeignKey("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.ImportGas", "MeasuringPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GasVolumeCalculation");

                    b.Navigation("MeasuringPoint");
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.LPFlare", b =>
                {
                    b.HasOne("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.GasVolumeCalculation", "GasVolumeCalculation")
                        .WithMany("LPFlares")
                        .HasForeignKey("GasVolumeCalculationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.Measuring.MeasuringPoints.Infra.EF.Models.MeasuringPoint", "MeasuringPoint")
                        .WithOne("LPFlare")
                        .HasForeignKey("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.LPFlare", "MeasuringPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GasVolumeCalculation");

                    b.Navigation("MeasuringPoint");
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.LowPressureGas", b =>
                {
                    b.HasOne("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.GasVolumeCalculation", "GasVolumeCalculation")
                        .WithMany("LowPressureGases")
                        .HasForeignKey("GasVolumeCalculationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.Measuring.MeasuringPoints.Infra.EF.Models.MeasuringPoint", "MeasuringPoint")
                        .WithOne("LowPressureGas")
                        .HasForeignKey("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.LowPressureGas", "MeasuringPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GasVolumeCalculation");

                    b.Navigation("MeasuringPoint");
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.PilotGas", b =>
                {
                    b.HasOne("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.GasVolumeCalculation", "GasVolumeCalculation")
                        .WithMany("PilotGases")
                        .HasForeignKey("GasVolumeCalculationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.Measuring.MeasuringPoints.Infra.EF.Models.MeasuringPoint", "MeasuringPoint")
                        .WithOne("PilotGas")
                        .HasForeignKey("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.PilotGas", "MeasuringPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GasVolumeCalculation");

                    b.Navigation("MeasuringPoint");
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.PurgeGas", b =>
                {
                    b.HasOne("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.GasVolumeCalculation", "GasVolumeCalculation")
                        .WithMany("PurgeGases")
                        .HasForeignKey("GasVolumeCalculationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.Measuring.MeasuringPoints.Infra.EF.Models.MeasuringPoint", "MeasuringPoint")
                        .WithOne("PurgeGas")
                        .HasForeignKey("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.PurgeGas", "MeasuringPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GasVolumeCalculation");

                    b.Navigation("MeasuringPoint");
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.Measurements.Infra.EF.Models.MeasurementHistory", b =>
                {
                    b.HasOne("PRIO.src.Modules.ControlAccess.Users.Infra.EF.Models.User", "ImportedBy")
                        .WithMany("MeasurementsHistories")
                        .HasForeignKey("ImportedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ImportedBy");
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.MeasuringPoints.Infra.EF.Models.MeasuringPoint", b =>
                {
                    b.HasOne("PRIO.src.Modules.Hierarchy.Installations.Infra.EF.Models.Installation", "Installation")
                        .WithMany("MeasuringPoints")
                        .HasForeignKey("InstallationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Installation");
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.OilVolumeCalculations.Infra.EF.Models.DOR", b =>
                {
                    b.HasOne("PRIO.src.Modules.Measuring.MeasuringPoints.Infra.EF.Models.MeasuringPoint", "MeasuringPoint")
                        .WithOne("DOR")
                        .HasForeignKey("PRIO.src.Modules.Measuring.OilVolumeCalculations.Infra.EF.Models.DOR", "MeasuringPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.Measuring.OilVolumeCalculations.Infra.EF.Models.OilVolumeCalculation", "OilVolumeCalculation")
                        .WithMany("DORs")
                        .HasForeignKey("OilVolumeCalculationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MeasuringPoint");

                    b.Navigation("OilVolumeCalculation");
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.OilVolumeCalculations.Infra.EF.Models.DrainVolume", b =>
                {
                    b.HasOne("PRIO.src.Modules.Measuring.MeasuringPoints.Infra.EF.Models.MeasuringPoint", "MeasuringPoint")
                        .WithOne("DrainVolume")
                        .HasForeignKey("PRIO.src.Modules.Measuring.OilVolumeCalculations.Infra.EF.Models.DrainVolume", "MeasuringPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.Measuring.OilVolumeCalculations.Infra.EF.Models.OilVolumeCalculation", "OilVolumeCalculation")
                        .WithMany("DrainVolumes")
                        .HasForeignKey("OilVolumeCalculationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MeasuringPoint");

                    b.Navigation("OilVolumeCalculation");
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.OilVolumeCalculations.Infra.EF.Models.OilVolumeCalculation", b =>
                {
                    b.HasOne("PRIO.src.Modules.Hierarchy.Installations.Infra.EF.Models.Installation", "Installation")
                        .WithOne("OilVolumeCalculation")
                        .HasForeignKey("PRIO.src.Modules.Measuring.OilVolumeCalculations.Infra.EF.Models.OilVolumeCalculation", "InstallationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Installation");
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.OilVolumeCalculations.Infra.EF.Models.Section", b =>
                {
                    b.HasOne("PRIO.src.Modules.Measuring.MeasuringPoints.Infra.EF.Models.MeasuringPoint", "MeasuringPoint")
                        .WithOne("Section")
                        .HasForeignKey("PRIO.src.Modules.Measuring.OilVolumeCalculations.Infra.EF.Models.Section", "MeasuringPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.Measuring.OilVolumeCalculations.Infra.EF.Models.OilVolumeCalculation", "OilVolumeCalculation")
                        .WithMany("Sections")
                        .HasForeignKey("OilVolumeCalculationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MeasuringPoint");

                    b.Navigation("OilVolumeCalculation");
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.OilVolumeCalculations.Infra.EF.Models.TOGRecoveredOil", b =>
                {
                    b.HasOne("PRIO.src.Modules.Measuring.MeasuringPoints.Infra.EF.Models.MeasuringPoint", "MeasuringPoint")
                        .WithOne("TOGRecoveredOil")
                        .HasForeignKey("PRIO.src.Modules.Measuring.OilVolumeCalculations.Infra.EF.Models.TOGRecoveredOil", "MeasuringPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.Measuring.OilVolumeCalculations.Infra.EF.Models.OilVolumeCalculation", "OilVolumeCalculation")
                        .WithMany("TOGRecoveredOils")
                        .HasForeignKey("OilVolumeCalculationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MeasuringPoint");

                    b.Navigation("OilVolumeCalculation");
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.Productions.Infra.EF.Models.Gas", b =>
                {
                    b.HasOne("PRIO.src.Modules.Measuring.Productions.Infra.EF.Models.GasDiferencial", "GasDiferencial")
                        .WithOne("Gas")
                        .HasForeignKey("PRIO.src.Modules.Measuring.Productions.Infra.EF.Models.Gas", "GasDiferencialId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("PRIO.src.Modules.Measuring.Productions.Infra.EF.Models.GasLinear", "GasLinear")
                        .WithOne("Gas")
                        .HasForeignKey("PRIO.src.Modules.Measuring.Productions.Infra.EF.Models.Gas", "GasLinearId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("GasDiferencial");

                    b.Navigation("GasLinear");
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.Productions.Infra.EF.Models.Production", b =>
                {
                    b.HasOne("PRIO.src.Modules.ControlAccess.Users.Infra.EF.Models.User", "CalculatedImportedBy")
                        .WithMany("Productions")
                        .HasForeignKey("CalculatedImportedById")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.Measuring.Productions.Infra.EF.Models.GasDiferencial", "GasDiferencial")
                        .WithOne("Production")
                        .HasForeignKey("PRIO.src.Modules.Measuring.Productions.Infra.EF.Models.Production", "GasDiferencialId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("PRIO.src.Modules.Measuring.Productions.Infra.EF.Models.Gas", "Gas")
                        .WithOne("Production")
                        .HasForeignKey("PRIO.src.Modules.Measuring.Productions.Infra.EF.Models.Production", "GasId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("PRIO.src.Modules.Measuring.Productions.Infra.EF.Models.GasLinear", "GasLinear")
                        .WithOne("Production")
                        .HasForeignKey("PRIO.src.Modules.Measuring.Productions.Infra.EF.Models.Production", "GasLinearId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("PRIO.src.Modules.Hierarchy.Installations.Infra.EF.Models.Installation", "Installation")
                        .WithMany("Productions")
                        .HasForeignKey("InstallationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PRIO.src.Modules.Measuring.Productions.Infra.EF.Models.Oil", "Oil")
                        .WithOne("Production")
                        .HasForeignKey("PRIO.src.Modules.Measuring.Productions.Infra.EF.Models.Production", "OilId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CalculatedImportedBy");

                    b.Navigation("Gas");

                    b.Navigation("GasDiferencial");

                    b.Navigation("GasLinear");

                    b.Navigation("Installation");

                    b.Navigation("Oil");
                });

            modelBuilder.Entity("PRIO.src.Modules.ControlAccess.Groups.Infra.EF.Models.Group", b =>
                {
                    b.Navigation("GroupPermissions");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRIO.src.Modules.ControlAccess.Groups.Infra.EF.Models.GroupPermission", b =>
                {
                    b.Navigation("Operations");

                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("PRIO.src.Modules.ControlAccess.Menus.Infra.EF.Models.Menu", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("GroupPermissions");
                });

            modelBuilder.Entity("PRIO.src.Modules.ControlAccess.Operations.Infra.EF.Models.GlobalOperation", b =>
                {
                    b.Navigation("GroupOperations");

                    b.Navigation("UserOperations");
                });

            modelBuilder.Entity("PRIO.src.Modules.ControlAccess.Users.Infra.EF.Models.User", b =>
                {
                    b.Navigation("BTPBases64");

                    b.Navigation("Clusters");

                    b.Navigation("Completions");

                    b.Navigation("Fields");

                    b.Navigation("Installations");

                    b.Navigation("Measurements");

                    b.Navigation("MeasurementsHistories");

                    b.Navigation("MeasuringEquipments");

                    b.Navigation("NFSMImportedHistories");

                    b.Navigation("Productions");

                    b.Navigation("Reservoirs");

                    b.Navigation("Session");

                    b.Navigation("UserPermissions");

                    b.Navigation("Wells");

                    b.Navigation("Zones");
                });

            modelBuilder.Entity("PRIO.src.Modules.ControlAccess.Users.Infra.EF.Models.UserPermission", b =>
                {
                    b.Navigation("UserOperation");
                });

            modelBuilder.Entity("PRIO.src.Modules.FileImport.XLSX.BTPS.Infra.EF.Models.BTP", b =>
                {
                    b.Navigation("BTPs");
                });

            modelBuilder.Entity("PRIO.src.Modules.FileImport.XLSX.BTPS.Infra.EF.Models.BTPBase64", b =>
                {
                    b.Navigation("BTPData")
                        .IsRequired();
                });

            modelBuilder.Entity("PRIO.src.Modules.FileImport.XML.NFSMS.Infra.EF.Models.NFSM", b =>
                {
                    b.Navigation("Measurements");

                    b.Navigation("Productions");
                });

            modelBuilder.Entity("PRIO.src.Modules.FileImport.XML.NFSMS.Infra.EF.Models.NFSMHistory", b =>
                {
                    b.Navigation("NFSM")
                        .IsRequired();
                });

            modelBuilder.Entity("PRIO.src.Modules.Hierarchy.Clusters.Infra.EF.Models.Cluster", b =>
                {
                    b.Navigation("Installations");
                });

            modelBuilder.Entity("PRIO.src.Modules.Hierarchy.Fields.Infra.EF.Models.Field", b =>
                {
                    b.Navigation("FRs");

                    b.Navigation("Wells");

                    b.Navigation("Zones");
                });

            modelBuilder.Entity("PRIO.src.Modules.Hierarchy.Installations.Infra.EF.Models.Installation", b =>
                {
                    b.Navigation("BTPs");

                    b.Navigation("Fields");

                    b.Navigation("GasVolumeCalculation")
                        .IsRequired();

                    b.Navigation("Measurements");

                    b.Navigation("MeasuringPoints");

                    b.Navigation("NFSMs");

                    b.Navigation("OilVolumeCalculation");

                    b.Navigation("Productions");
                });

            modelBuilder.Entity("PRIO.src.Modules.Hierarchy.Reservoirs.Infra.EF.Models.Reservoir", b =>
                {
                    b.Navigation("Completions");
                });

            modelBuilder.Entity("PRIO.src.Modules.Hierarchy.Wells.Infra.EF.Models.Well", b =>
                {
                    b.Navigation("BTPDatas");

                    b.Navigation("Completions");
                });

            modelBuilder.Entity("PRIO.src.Modules.Hierarchy.Zones.Infra.EF.Models.Zone", b =>
                {
                    b.Navigation("Reservoirs");
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.Equipments.Infra.EF.Models.FileType", b =>
                {
                    b.Navigation("Measurements");
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.Equipments.Infra.EF.Models.Measurement", b =>
                {
                    b.Navigation("LISTA_BSW");

                    b.Navigation("LISTA_CALIBRACAO");

                    b.Navigation("LISTA_VOLUME");
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.GasVolumeCalculations.Infra.EF.Models.GasVolumeCalculation", b =>
                {
                    b.Navigation("AssistanceGases");

                    b.Navigation("ExportGases");

                    b.Navigation("HPFlares");

                    b.Navigation("HighPressureGases");

                    b.Navigation("ImportGases");

                    b.Navigation("LPFlares");

                    b.Navigation("LowPressureGases");

                    b.Navigation("PilotGases");

                    b.Navigation("PurgeGases");
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.Measurements.Infra.EF.Models.MeasurementHistory", b =>
                {
                    b.Navigation("Measurements");
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.MeasuringPoints.Infra.EF.Models.MeasuringPoint", b =>
                {
                    b.Navigation("AssistanceGas");

                    b.Navigation("DOR");

                    b.Navigation("DrainVolume");

                    b.Navigation("ExportGas");

                    b.Navigation("HPFlare");

                    b.Navigation("HighPressureGas");

                    b.Navigation("ImportGas");

                    b.Navigation("LPFlare");

                    b.Navigation("LowPressureGas");

                    b.Navigation("Measurements");

                    b.Navigation("MeasuringEquipments");

                    b.Navigation("NFSMs");

                    b.Navigation("PilotGas");

                    b.Navigation("PurgeGas");

                    b.Navigation("Section");

                    b.Navigation("TOGRecoveredOil");
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.OilVolumeCalculations.Infra.EF.Models.OilVolumeCalculation", b =>
                {
                    b.Navigation("DORs");

                    b.Navigation("DrainVolumes");

                    b.Navigation("Sections");

                    b.Navigation("TOGRecoveredOils");
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.Productions.Infra.EF.Models.Gas", b =>
                {
                    b.Navigation("Production")
                        .IsRequired();
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.Productions.Infra.EF.Models.GasDiferencial", b =>
                {
                    b.Navigation("Gas")
                        .IsRequired();

                    b.Navigation("Production")
                        .IsRequired();
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.Productions.Infra.EF.Models.GasLinear", b =>
                {
                    b.Navigation("Gas")
                        .IsRequired();

                    b.Navigation("Production")
                        .IsRequired();
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.Productions.Infra.EF.Models.Oil", b =>
                {
                    b.Navigation("Production")
                        .IsRequired();
                });

            modelBuilder.Entity("PRIO.src.Modules.Measuring.Productions.Infra.EF.Models.Production", b =>
                {
                    b.Navigation("FieldsFR");

                    b.Navigation("Measurements");

                    b.Navigation("NFSMs");
                });
#pragma warning restore 612, 618
        }
    }
}
